(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{373:function(v,_,e){"use strict";e.r(_);var o=e(45),c=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"csrf跨站请求伪造"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#csrf跨站请求伪造"}},[v._v("#")]),v._v(" CSRF跨站请求伪造")]),v._v(" "),e("p",[v._v("跨站请求伪造通常缩写为"),e("code",[v._v("CSRF")]),v._v("或者"),e("code",[v._v("XSRF")]),v._v("，是一种挟制用户在当前已登录的"),e("code",[v._v("Web")]),v._v("应用程序上执行非本意的操作的攻击方法。跟跨网站脚本"),e("code",[v._v("XSS")]),v._v("相比，"),e("code",[v._v("XSS")]),v._v("利用的是用户对指定网站的信任，"),e("code",[v._v("CSRF")]),v._v("利用的是网站对用户浏览器的信任，浏览器对于同一"),e("code",[v._v("domain")]),v._v("下所有请求会自动携带"),e("code",[v._v("cookie")]),v._v("。")]),v._v(" "),e("h2",{attrs:{id:"原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[v._v("#")]),v._v(" 原理")]),v._v(" "),e("ol",[e("li",[v._v("用户"),e("code",[v._v("A")]),v._v("正常打开网站"),e("code",[v._v("B")]),v._v("，并且成功登录获取"),e("code",[v._v("cookie")]),v._v("。")]),v._v(" "),e("li",[v._v("用户"),e("code",[v._v("A")]),v._v("未退出网站"),e("code",[v._v("B")]),v._v("，在同一个浏览器中打开新的"),e("code",[v._v("TAB")]),v._v("访问了网站"),e("code",[v._v("C")]),v._v("。")]),v._v(" "),e("li",[v._v("网站"),e("code",[v._v("C")]),v._v("的页面存有一些攻击性的代码，会发出对于网站B的一个访问请求。")]),v._v(" "),e("li",[v._v("浏览器收到请求后，在用户不知情的情况下携带"),e("code",[v._v("cookie")]),v._v("访问网站"),e("code",[v._v("B")]),v._v("，导致网站"),e("code",[v._v("B")]),v._v("以用户"),e("code",[v._v("A")]),v._v("的权限处理请求。")])]),v._v(" "),e("h2",{attrs:{id:"实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[v._v("#")]),v._v(" 实例")]),v._v(" "),e("p",[v._v("小明在某银行有存款，通过"),e("code",[v._v("GET")]),v._v("表单请求"),e("code",[v._v("http://bank.example/withdraw?uid=1&amount=100&for=2")]),v._v("就可以向账户"),e("code",[v._v("2")]),v._v("转账"),e("code",[v._v("100")]),v._v("，当对银行发起这个请求后，首先会验证"),e("code",[v._v("cookie")]),v._v("是否有合法的"),e("code",[v._v("session")]),v._v("才进行数据处理。"),e("br"),v._v("\n小黑近期无聊，就自己做了一个网站，利用某些标签允许跨域请求资源的策略，在自己的网站中构造"),e("code",[v._v('<img src="http://bank.example/withdraw?uid=1&amount=100&for=2">')]),v._v("，并通过广告、游戏等方式诱导小明点击进入这个网站，此时浏览器会携带"),e("code",[v._v("cookie")]),v._v("访问银行网站。在大部分情况下，这个请求并不会成功被执行，因为他并没有小明的认证信息，但是如果此时恰好小明刚刚访问了银行，此时服务端"),e("code",[v._v("session")]),v._v("尚未过期，这个"),e("code",[v._v("url")]),v._v("就会被正常响应，转账就会被执行。")]),v._v(" "),e("h2",{attrs:{id:"防御"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防御"}},[v._v("#")]),v._v(" 防御")]),v._v(" "),e("h3",{attrs:{id:"验证码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证码"}},[v._v("#")]),v._v(" 验证码")]),v._v(" "),e("p",[v._v("对于敏感操作加入验证码，强制用户与网站进行交互，能很好遏制"),e("code",[v._v("CSRF")]),v._v("攻击。")]),v._v(" "),e("h3",{attrs:{id:"避免使用get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#避免使用get"}},[v._v("#")]),v._v(" 避免使用GET")]),v._v(" "),e("p",[e("code",[v._v("GET")]),v._v("接口太容易被拿来做"),e("code",[v._v("CSRF")]),v._v("攻击，只要构造一个"),e("code",[v._v("<img>")]),v._v("标签，而"),e("code",[v._v("<img>")]),v._v("标签又是不能过滤的数据。接口最好限制为"),e("code",[v._v("POST")]),v._v("使用，"),e("code",[v._v("GET")]),v._v("则无效，降低攻击风险。当然强制"),e("code",[v._v("POST")]),v._v("只是降低了风险，攻击者只要构造一个"),e("code",[v._v("<form>")]),v._v("就可以，但需要在第三方页面做，这样就增加暴露的可能性。")]),v._v(" "),e("h3",{attrs:{id:"检查referer字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检查referer字段"}},[v._v("#")]),v._v(" 检查Referer字段")]),v._v(" "),e("p",[e("code",[v._v("HTTP")]),v._v("协议有一个"),e("code",[v._v("Referer")]),v._v("字段，记录了该"),e("code",[v._v("HTTP")]),v._v("请求的来源地址，浏览器限制其改动，最多将其设置为空"),e("code",[v._v('rel="noreferrer"')]),v._v("，当然如果不是在浏览器中发起"),e("code",[v._v("HTTP")]),v._v("请求是可以随意改动这个字段的。"),e("br"),v._v("\n同样以小黑的"),e("code",[v._v("CSRF")]),v._v("攻击为例，假如小黑诱导小明的网站为"),e("code",[v._v("www.black.com")]),v._v("，那么对于其构建的"),e("code",[v._v("CSRF")]),v._v("攻击请求的"),e("code",[v._v("Referer")]),v._v("为"),e("code",[v._v("www.black.com")]),v._v("，而正常情况下应该为"),e("code",[v._v("http://bank.example")]),v._v("域名开头的一个链接，检测其不正确或者为空即拒绝响应。"),e("br"),v._v("\n但是这种方法也有一定的局限性，某些旧版本的浏览器比如"),e("code",[v._v("IE6")]),v._v("可以篡改"),e("code",[v._v("Referer")]),v._v("字段，有些用户认为"),e("code",[v._v("Referer")]),v._v("字段会侵犯他们的隐私，从而关闭了浏览器发送"),e("code",[v._v("Referer")]),v._v("，正常访问网站会被误认为为"),e("code",[v._v("CSRF")]),v._v("而拒绝响应。")]),v._v(" "),e("h3",{attrs:{id:"加入token验证字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加入token验证字段"}},[v._v("#")]),v._v(" 加入Token验证字段")]),v._v(" "),e("p",[e("code",[v._v("CSRF")]),v._v("攻击之所以能够成功，是因为浏览器自动携带"),e("code",[v._v("cookie")]),v._v("进行请求，该请求中所有的用户验证信息都是存在于"),e("code",[v._v("cookie")]),v._v("中，由此可以完全伪造用户的请求。要抵御"),e("code",[v._v("CSRF")]),v._v("，关键在于在请求中放入黑客所不能伪造的信息，并且该信息不存在于"),e("code",[v._v("cookie")]),v._v("之中。"),e("br"),v._v("\n在请求头中加入一个"),e("code",[v._v("Token")]),v._v("字段，浏览器并不会自动携带"),e("code",[v._v("Token")]),v._v("去请求，且"),e("code",[v._v("Token")]),v._v("可以携带一段加密的"),e("code",[v._v("jwt")]),v._v("用作身份认证，这样进行"),e("code",[v._v("CSRF")]),v._v("的时候仅传递了"),e("code",[v._v("cookie")]),v._v("，并不能表明用户身份，网站即拒绝攻击请求。")]),v._v(" "),e("h2",{attrs:{id:"每日一题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[v._v("#")]),v._v(" 每日一题")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("https://github.com/WindrunnerMax/EveryDay\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])])])}),[],!1,null,null,null);_.default=c.exports}}]);