(window.webpackJsonp=window.webpackJsonp||[]).push([[332],{698:function(s,e,n){"use strict";n.r(e);var a=n(45),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"nginx常用配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx常用配置"}},[s._v("#")]),s._v(" Nginx常用配置")]),s._v(" "),n("p",[n("code",[s._v("Nginx (Engine X)")]),s._v("是一个轻量级的高性能的"),n("code",[s._v("HTTP")]),s._v("和反向代理"),n("code",[s._v("web")]),s._v("服务器，同时也提供了电子邮件"),n("code",[s._v("IMAP/POP3/SMTP")]),s._v("服务，在"),n("code",[s._v("BSD-like")]),s._v("协议下发行，其特点是占有内存少，并发能力强，事实上"),n("code",[s._v("nginx")]),s._v("的并发能力在同类型的网页服务器中表现较好。")]),s._v(" "),n("h2",{attrs:{id:"常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("-c </path/to/config>")]),s._v(": 为"),n("code",[s._v("Nginx")]),s._v("指定一个配置文件，来代替缺省的配置文件。")]),s._v(" "),n("li",[n("code",[s._v("-t")]),s._v(": 不运行而仅仅测试配置文件，"),n("code",[s._v("nginx")]),s._v("将检查配置文件的语法的正确性，并尝试打开配置文件中所引用到的文件，这个命令也可以查看"),n("code",[s._v("nginx")]),s._v("文件的所在位置。")]),s._v(" "),n("li",[n("code",[s._v("-v")]),s._v(": 显示"),n("code",[s._v("nginx")]),s._v("的版本。")]),s._v(" "),n("li",[n("code",[s._v("-V")]),s._v(": 显示"),n("code",[s._v("nginx")]),s._v("的版本，编译器版本和配置参数。")]),s._v(" "),n("li",[n("code",[s._v("nginx -s ${signal}")]),s._v(": 通过执行"),n("code",[s._v("nginx")]),s._v("加"),n("code",[s._v("-s")]),s._v("参数来控制"),n("code",[s._v("nginx")]),s._v("的一些行为，"),n("code",[s._v("${signal}")]),s._v("通常可以取"),n("code",[s._v("stop")]),s._v("快速停止、"),n("code",[s._v("quit")]),s._v("平滑停止、"),n("code",[s._v("reload")]),s._v("重新加载配置文件、"),n("code",[s._v("reopen")]),s._v("重新打开日志文件。")])]),s._v(" "),n("h2",{attrs:{id:"配置模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置模块"}},[s._v("#")]),s._v(" 配置模块")]),s._v(" "),n("p",[s._v("Nginx配置文件的分块下，基本就分为以下几块：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("main # 全局设置\nevents { # Nginx工作模式\n    ....\n}\nhttp { # http设置\n    ....\n    upstream myproject { # 负载均衡服务器设置\n        .....\n    }\n    server  { # 主机设置\n        ....\n        location { # URL匹配\n            ....\n        }\n    }\n    server  {\n        ....\n        location {\n            ....\n        }\n    }\n    ....\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h3",{attrs:{id:"main模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#main模块"}},[s._v("#")]),s._v(" main模块")]),s._v(" "),n("p",[n("code",[s._v("main")]),s._v("区域是一个全局的设置。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("user www www; # user 来指定Nginx Worker进程运行用户以及用户组，默认由nobody账号运行。 \nworker_processes auto; # worker_processes 来指定了Nginx要开启的子进程数。每个Nginx进程平均耗费10M~12M内存。根据经验，一般指定1个进程就足够了，如果是多核CPU，建议指定和CPU的数量一样的进程数即可。如果这里写2，那么就会开启2个子进程，总共3个进程。\nerror_log /usr/local/var/log/nginx/error.log notice; # error_log 来定义全局错误日志文件。日志输出级别有debug、info、notice、warn、error、crit可供选择，其中，debug输出日志最为最详细，而crit输出日志最少。\npid /usr/local/var/run/nginx/nginx.pid; # pid 来指定进程id的存储文件位置。\nworker_rlimit_nofile 1024; # worker_rlimit_nofile 来指定一个nginx进程可以打开的最多文件描述符数目。\ninclude /www/server/vhost/nginx/*.conf; # 将部分配置直接拆分出来,分成不同的配置文件。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"events模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#events模块"}},[s._v("#")]),s._v(" events模块")]),s._v(" "),n("p",[n("code",[s._v("events")]),s._v("模块通常用来指定"),n("code",[s._v("nginx")]),s._v("的工作模式和工作模式及连接数上限。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("events {\n    use epoll; # use 用来指定Nginx的工作模式。Nginx支持的工作模式有select、poll、kqueue、epoll、rtsig和/dev/poll，其中select和poll都是标准的工作模式，kqueue和epoll是高效的工作模式，不同的是epoll用在Linux平台上，而kqueue用在BSD系统中。\n    worker_connections  1024; # worker_connections 用于定义Nginx每个进程的最大连接数，即接收前端的最大请求数，默认是1024。最大客户端连接数由worker_processes和worker_connections决定，即Max_clients = worker_processes * worker_connections，在作为反向代理时，Max_clients变为：Max_clients = worker_processes * worker_connections / 4。\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"http模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http模块"}},[s._v("#")]),s._v(" http模块")]),s._v(" "),n("p",[n("code",[s._v("http")]),s._v("模块可以说是最核心的模块了，它负责"),n("code",[s._v("HTTP")]),s._v("服务器相关属性的配置，它里面的"),n("code",[s._v("server")]),s._v("和"),n("code",[s._v("upstream")]),s._v("子模块。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('http {\n    include mime.types; # 用来设定文件的mime类型,类型在配置文件目录下的mime.type文件定义，来告诉nginx来识别文件类型。\n    default_type application/octet-stream; # 设定了默认的类型为二进制流，也就是当文件类型未定义时使用这种方式，例如在没有配置asp的locate 环境时，Nginx是不予解析的，此时，用浏览器访问asp文件就会出现下载窗口了。\n    log_format main \'$remote_addr - $remote_user [$time_local] "$request" \'\n                    \'$status $body_bytes_sent "$http_referer" \'\n                    \'"$http_user_agent" "$http_x_forwarded_for"\'; # 用于设置日志的格式，和记录哪些参数，这里设置为main，刚好用于access_log来纪录这种类型。\n    access_log /usr/local/var/log/nginx/access.log  main; # 用来记录每次的访问日志的文件地址，后面的main是日志的格式样式，对应于log_format的main。\n    sendfile on; # 用于开启高效文件传输模式。\n    tcp_nopush on; # 用于防止网络阻塞。\n    tcp_nodelay on; # 用于防止网络阻塞。\n    keepalive_timeout 10; # 设置客户端连接保持活动的超时时间，在超过这个时间之后，服务器会关闭该连接。\n    gzip on; # gzip 压缩，用来对静态资源进行压缩，需要客户端同时支持才有效。\n    gzip_disable "MSIE [1-6]\\.(?!.*SV1)"; # IE6的某些版本对gzip的压缩支持很不好,故关闭。\n    gzip_http_version 1.0; # HTTP1.0以上的版本都启动gzip\n    gzip_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml; # 指定哪些类型的相应才启用gzip压缩，多个用空格分隔\n    gzip_comp_level 5; # 压缩等级，可选1-9，值越大压缩时间越长压缩率越高，通常选2-5\n    upstream myproject {\n        .....\n    }\n    server {\n        ....\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[n("code",[s._v("server")]),s._v("模块是"),n("code",[s._v("http")]),s._v("的子模块，它用来定义一个虚拟主机，这些配置为在该"),n("code",[s._v("server")]),s._v("下具有全局性例如"),n("code",[s._v("root")]),s._v("，当然也可以在"),n("code",[s._v("location")]),s._v("中重新定义"),n("code",[s._v("root")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-conf line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("server {\n    listen      80; # 用于指定虚拟主机的服务端口。\n    server_name localhost www.example.com; # 用来指定IP地址或者域名，多个域名之间用空格分开。\n    root        /www/wwwroot/www.example.com; # 全局定义，表示在该server下web的根目录，注意要和locate {}下面定义的区分开来。\n    index       index.php index.html index.htm; # 全局定义访问的默认首页地址。\n    charset     utf-8; # 设置网页的默认编码格式。\n    access_log  logs/host.access.log  main; # 用来指定此虚拟主机的访问日志存放路径，输出格式为main。\n    error_log   logs/host.error.log  error; # 错误日志存放路径，输出格式为error。\n    error_page  404  /404.html; # 状态码为404时的时候的网页地址,还可定义500,502之类的\n    ....\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"location模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#location模块"}},[s._v("#")]),s._v(" location模块")]),s._v(" "),n("p",[n("code",[s._v("location")]),s._v("是"),n("code",[s._v("server")]),s._v("的子模块，是用来定位的，定位"),n("code",[s._v("URL")]),s._v("与解析"),n("code",[s._v("URL")]),s._v("，所以它也提供了强大的正则匹配功能，也支持条件判断匹配，用户可以通过"),n("code",[s._v("location")]),s._v("指令实现"),n("code",[s._v("Nginx")]),s._v("对动、静态网页进行过滤处理。"),n("br"),s._v(" "),n("code",[s._v("location")]),s._v("的匹配规则和顺序:")]),s._v(" "),n("ul",[n("li",[s._v("第一种是"),n("code",[s._v("=")]),s._v("类型，表示精确匹配，优先级最高，一旦匹配到忽略之后的正则匹配。")]),s._v(" "),n("li",[n("code",[s._v("^~")]),s._v("类型，表示前缀匹配，是字符串开头匹配而非正则匹配，当匹配到该规则时，停止往下面的搜索，所以如果存在两个"),n("code",[s._v("^~")]),s._v("匹配的时候要注意有顺序之分，优先级比正则高。")]),s._v(" "),n("li",[n("code",[s._v("~")]),s._v("和"),n("code",[s._v("~*")]),s._v("正则匹配，两者区别是后者不区分大小写，有顺序之分，匹配到第一个正则停止搜索。")]),s._v(" "),n("li",[n("code",[s._v("/uri")]),s._v("普通字符串匹配，无顺序之分，会选择匹配长度最长的配置。")]),s._v(" "),n("li",[n("code",[s._v("/")]),s._v(" 通用匹配，匹配所有请求。")]),s._v(" "),n("li",[s._v("还有一种特殊匹配类型"),n("code",[s._v("@url")]),s._v("，只用于"),n("code",[s._v("nginx")]),s._v("内部跳转，例"),n("code",[s._v("location @40x { root /var/www/errors/40x.html; }")]),s._v(";")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 简单例子，匹配所有请求\n\nlocation / {\n    root   /home/www/html;\n    index  index.php index.html index.htm;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 使用正则匹配的例子 \n# 匹配.php结尾的请求\n\nlocation ~ \\.php$ {\n    ....\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 反向代理的例子 \n# 匹配到/api开头的路由时候，将请求转发到http://192.168.0.1，但是通常不是直接填写地址，而是设置一个upstream配置\n\nlocation /api {\n    proxy_pass  http://192.168.0.1; #请求转向地址192.168.0.1\n    #不修改被代理服务器返回的响应头中的location头\n    proxy_redirect off;\n    #使用nginx反向代理后，如果要使服务获取真实的用户信息，通常用请求头携带\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n}\n\n# 匹配到携带example字符串的请求 将请求转发到其他HOST并携带path\nlocation ~ /example/ {\n    proxy_set_header Host example.example.top;\n    if ($request_uri ~*  [.]*?/example/(.*)){\n       set $path $1;\n       proxy_pass http://127.0.0.1/$path;\n     }\n}\n\n# vue-router、react-router等路由框架要开启history模式可以选择的nginx配置的例子\nlocation / {\n  alias     static/;\n  try_files $uri $uri/ /index.html;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h3",{attrs:{id:"upstream模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#upstream模块"}},[s._v("#")]),s._v(" upstream模块")]),s._v(" "),n("p",[n("code",[s._v("upstream")]),s._v("可以为后端服务器提供简单的负载均衡。")]),s._v(" "),n("p",[n("code",[s._v("Nginx")]),s._v("的负载均衡模块目前支持"),n("code",[s._v("4")]),s._v("种调度算法，其中"),n("code",[s._v("fair")]),s._v("和"),n("code",[s._v("url_hash")]),s._v("需要加载其他软件包:")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("weight")]),s._v("轮询(默认)。每个请求按时间顺序逐一分配到不同的后端服务器，如果后端某台服务器宕机，故障系统被自动剔除，使用户访问不受影响，"),n("code",[s._v("weight")]),s._v("可以指定轮询权值，"),n("code",[s._v("weight")]),s._v("越大，分配到的访问机率越高，主要用于后端每个服务器性能不均的情况下。")]),s._v(" "),n("li",[n("code",[s._v("ip_hash")]),s._v("，每个请求按访问"),n("code",[s._v("IP")]),s._v("的"),n("code",[s._v("hash")]),s._v("结果分配，这样来自同一个"),n("code",[s._v("IP")]),s._v("的访客固定访问一个后端服务器，有效解决了动态网页存在的"),n("code",[s._v("session")]),s._v("共享问题。")]),s._v(" "),n("li",[n("code",[s._v("fair")]),s._v("(第三方)，比上面两个更加智能的负载均衡算法。此种算法可以依据页面大小和加载时间长短智能地进行负载均衡，也就是根据后端服务器的响应时间来分配请求，响应时间短的优先分配。"),n("code",[s._v("Nginx")]),s._v("本身是不支持"),n("code",[s._v("fair")]),s._v("的，如果需要使用这种调度算法，必须下载"),n("code",[s._v("Nginx")]),s._v("的"),n("code",[s._v("upstream_fair")]),s._v("模块。")]),s._v(" "),n("li",[n("code",[s._v("url_hash")]),s._v("(第三方)。按访问"),n("code",[s._v("url")]),s._v("的"),n("code",[s._v("hash")]),s._v("结果来分配请求，使每个"),n("code",[s._v("url")]),s._v("定向到同一个后端服务器，可以进一步提高后端缓存服务器的效率。"),n("code",[s._v("Nginx")]),s._v("本身是不支持"),n("code",[s._v("url_hash")]),s._v("的，如果需要使用这种调度算法，必须安装"),n("code",[s._v("Nginx")]),s._v("的"),n("code",[s._v("hash")]),s._v("软件包。")])]),s._v(" "),n("p",[s._v("在"),n("code",[s._v("HTTP Upstream")]),s._v("模块中，可以通过"),n("code",[s._v("server")]),s._v("指令指定后端服务器的"),n("code",[s._v("IP")]),s._v("地址和端口，同时还可以设定每个后端服务器在负载均衡调度中的状态，常用的状态有:")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("down")]),s._v("表示当前的"),n("code",[s._v("server")]),s._v("暂时不参与负载均衡。")]),s._v(" "),n("li",[n("code",[s._v("backup")]),s._v("预留的备份机器，当其他所有的非"),n("code",[s._v("backup")]),s._v("机器出现故障或者忙的时候，才会请求"),n("code",[s._v("backup")]),s._v("机器，因此这台机器的压力最轻。")]),s._v(" "),n("li",[n("code",[s._v("max_fails")]),s._v("允许请求失败的次数，默认为"),n("code",[s._v("1")]),s._v("，当超过最大次数时，返回"),n("code",[s._v("proxy_next_upstream")]),s._v("模块定义的错误。")]),s._v(" "),n("li",[n("code",[s._v("fail_timeout")]),s._v("，在经历了"),n("code",[s._v("max_fails")]),s._v("次失败后，暂停服务的时间，"),n("code",[s._v("max_fails")]),s._v("可以和"),n("code",[s._v("fail_timeout")]),s._v("一起使用。")]),s._v(" "),n("li",[s._v("注：当负载调度算法为"),n("code",[s._v("ip_hash")]),s._v("时，后端服务器在负载均衡调度中的状态不能是"),n("code",[s._v("weight")]),s._v("和"),n("code",[s._v("backup")]),s._v("。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("upstream backend_name {\n    server 192.168.12.1:80 weight=5;\n    server 192.168.12.2:80 down;\n    server 192.168.12.3:8080  max_fails=3  fail_timeout=20s;\n    server 192.168.12.4:8080;\n}\n\nserver {\n  location / {\n    proxy_pass  http://backend_name/;\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h2",{attrs:{id:"每日一题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[s._v("#")]),s._v(" 每日一题")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("https://github.com/WindrunnerMax/EveryDay\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("https://www.jianshu.com/p/f04733896a48\nhttps://juejin.cn/post/6844903598824882183\nhttps://blog.csdn.net/weixin_37610397/article/details/106608265\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);