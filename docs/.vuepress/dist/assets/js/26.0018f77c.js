(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{393:function(v,e,_){"use strict";_.r(e);var s=_(45),a=Object(s.a)({},(function(){var v=this,e=v.$createElement,_=v._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"restful架构与rpc架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#restful架构与rpc架构"}},[v._v("#")]),v._v(" RESTful架构与RPC架构")]),v._v(" "),_("p",[v._v("在"),_("code",[v._v("RESTful")]),v._v("架构中，关注点在于资源，操作资源时使用标准方法检索并操作信息片段，在"),_("code",[v._v("RPC")]),v._v("架构中，关注点在于方法，调用方法时将像调用本地方法一样调用服务器的方法。")]),v._v(" "),_("h2",{attrs:{id:"restful架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#restful架构"}},[v._v("#")]),v._v(" RESTful架构")]),v._v(" "),_("p",[_("code",[v._v("REST")]),v._v("即表述性状态传递"),_("code",[v._v("Representational State Transfer")]),v._v("，是一种软件架构风格，也可以称作是一种设计"),_("code",[v._v("API")]),v._v("的模式，"),_("code",[v._v("REST")]),v._v("通过"),_("code",[v._v("HTTP")]),v._v("协议定义的通用动词方法"),_("code",[v._v("GET")]),v._v("、"),_("code",[v._v("POST")]),v._v("、"),_("code",[v._v("PUT")]),v._v("、"),_("code",[v._v("DELETE")]),v._v("，以"),_("code",[v._v("URI")]),v._v("对网络资源进行唯一标识，响应端根据请求端的不同需求，通过无状态通信，对其请求的资源进行表述，符合"),_("code",[v._v("REST")]),v._v("设计规范的架构就称为"),_("code",[v._v("RESTful")]),v._v("架构。")]),v._v(" "),_("h3",{attrs:{id:"主要原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#主要原则"}},[v._v("#")]),v._v(" 主要原则")]),v._v(" "),_("ul",[_("li",[v._v("网络上的所有事物都被抽象为资源")]),v._v(" "),_("li",[v._v("每个资源都有一个唯一的资源标识符")]),v._v(" "),_("li",[v._v("对资源的各种操作不会改变资源标识符")]),v._v(" "),_("li",[v._v("所有的操作都是无状态的")]),v._v(" "),_("li",[v._v("同一个资源具有多种表现形式如"),_("code",[v._v("xml")]),v._v("、"),_("code",[v._v("json")]),v._v("等")])]),v._v(" "),_("h3",{attrs:{id:"统一资源接口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#统一资源接口"}},[v._v("#")]),v._v(" 统一资源接口")]),v._v(" "),_("p",[v._v("安全性是指访问"),_("code",[v._v("REST")]),v._v("接口时不会对服务端资源状态发生改变。"),_("br"),v._v("\n幂等性是指对于同一"),_("code",[v._v("REST")]),v._v("接口的"),_("code",[v._v("URI")]),v._v("多次访问时，得到的资源状态是相同的。")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("GET")]),v._v(": 安全的，幂等的，用于读取资源")]),v._v(" "),_("li",[_("code",[v._v("POST")]),v._v(": 不安全的，不幂等的，用于服务端自动产生的实例号创建资源，更新部分资源")]),v._v(" "),_("li",[_("code",[v._v("PUT")]),v._v(": 不安全的，幂等的，用于客户端的实例号创建资源，更新资源")]),v._v(" "),_("li",[_("code",[v._v("DELETE")]),v._v(": 不安全的，幂等的，用于客户端实例号删除资源")])]),v._v(" "),_("h3",{attrs:{id:"实例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[v._v("#")]),v._v(" 实例")]),v._v(" "),_("ul",[_("li",[v._v("查询"),_("code",[v._v("user")]),v._v("，"),_("code",[v._v("GET https://127.0.0.1/user/1")]),v._v("，通过直接携带"),_("code",[v._v("params")]),v._v("查询用户")]),v._v(" "),_("li",[v._v("新增"),_("code",[v._v("user")]),v._v("，"),_("code",[v._v("POST https://127.0.0.1/user")]),v._v("，请求"),_("code",[v._v("body")]),v._v("附带用户注册信息")]),v._v(" "),_("li",[v._v("修改"),_("code",[v._v("user")]),v._v("，"),_("code",[v._v("PUT https://127.0.0.1/user")]),v._v("，请求"),_("code",[v._v("body")]),v._v("附带"),_("code",[v._v("userid")]),v._v("标识信息")]),v._v(" "),_("li",[v._v("删除"),_("code",[v._v("user")]),v._v("，"),_("code",[v._v("DELETE https://127.0.0.1/user")]),v._v("，请求"),_("code",[v._v("body")]),v._v("附带"),_("code",[v._v("userid")]),v._v("标识信息")]),v._v(" "),_("li",[v._v("通过请求头"),_("code",[v._v("Accept")]),v._v("来获取同一资源的不同形式，如"),_("code",[v._v("application/json")]),v._v("与"),_("code",[v._v("application/xml")]),v._v("等")]),v._v(" "),_("li",[v._v("若将版本号看作同一资源的不同表现形式的话，同样应该在"),_("code",[v._v("Accept")]),v._v("字段来区分版本而不是直接在"),_("code",[v._v("URI")]),v._v("中添加版本号")])]),v._v(" "),_("h2",{attrs:{id:"rpc架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#rpc架构"}},[v._v("#")]),v._v(" RPC架构")]),v._v(" "),_("p",[_("code",[v._v("RPC")]),v._v("即远程过程调用"),_("code",[v._v("Remote Procedure Call")]),v._v("，简单的理解是一个节点请求另一个节点提供的服务，远程过程调用，是相对于本地过程调用来说的，当调用方法时就像调用本地方法一样调用远程服务器的方法，做到了轻量、无感知通信。")]),v._v(" "),_("h3",{attrs:{id:"结构组成"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#结构组成"}},[v._v("#")]),v._v(" 结构组成")]),v._v(" "),_("ul",[_("li",[v._v("客户端"),_("code",[v._v("client")]),v._v("：服务的调用方")]),v._v(" "),_("li",[v._v("服务端"),_("code",[v._v("server")]),v._v("：服务的提供方")]),v._v(" "),_("li",[v._v("客户端存根"),_("code",[v._v("client stub")]),v._v("：将客户端请求参数打包成网络消息，再发给服务方")]),v._v(" "),_("li",[v._v("服务端存根"),_("code",[v._v("server stub")]),v._v("：接收客户端发来的消息，将消息解包，并调用本地方法")])]),v._v(" "),_("h3",{attrs:{id:"通信过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#通信过程"}},[v._v("#")]),v._v(" 通信过程")]),v._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("客户端 \n1. 将这个调用映射为Call Id\n2. 将这个Call Id与参数等序列化，以二进制形式打包\n3. 将序列化数据包通过网络通信发送到服务端\n4. 等待服务端响应\n5. 服务端调用成功并返回结果，反序列化后进行下一步操作\n\n服务端 \n1. 在本地维护一个Call Id的Map，用以保证Id与调用方法的对应\n2. 等待客户端请求\n3. 得到一个请求后，将数据包反序列化，得到Call Id与参数等\n4. 通过Map寻找Call Id所对应的函数指针\n5. 通过函数指针调用函数，并将数据包反序列化后的参数传递，得到结果\n6. 将结果序列化之后通过网络通信返回到客户端\n\n注：\n此处的客户端指的是本地调用者，也可以是一台服务器\n此处的服务端指的是被调用者，也可以是一台服务器\n数据包通信时无论是使用socket进行TCP传输，或使用HTTP进行传输都是可行的\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br"),_("span",{staticClass:"line-number"},[v._v("4")]),_("br"),_("span",{staticClass:"line-number"},[v._v("5")]),_("br"),_("span",{staticClass:"line-number"},[v._v("6")]),_("br"),_("span",{staticClass:"line-number"},[v._v("7")]),_("br"),_("span",{staticClass:"line-number"},[v._v("8")]),_("br"),_("span",{staticClass:"line-number"},[v._v("9")]),_("br"),_("span",{staticClass:"line-number"},[v._v("10")]),_("br"),_("span",{staticClass:"line-number"},[v._v("11")]),_("br"),_("span",{staticClass:"line-number"},[v._v("12")]),_("br"),_("span",{staticClass:"line-number"},[v._v("13")]),_("br"),_("span",{staticClass:"line-number"},[v._v("14")]),_("br"),_("span",{staticClass:"line-number"},[v._v("15")]),_("br"),_("span",{staticClass:"line-number"},[v._v("16")]),_("br"),_("span",{staticClass:"line-number"},[v._v("17")]),_("br"),_("span",{staticClass:"line-number"},[v._v("18")]),_("br"),_("span",{staticClass:"line-number"},[v._v("19")]),_("br")])]),_("h2",{attrs:{id:"相关比较"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相关比较"}},[v._v("#")]),v._v(" 相关比较")]),v._v(" "),_("ul",[_("li",[v._v("在通信协议方面来说，"),_("code",[v._v("RESTful")]),v._v("是使用"),_("code",[v._v("HTTP")]),v._v("协议进行数据传输，"),_("code",[v._v("RPC")]),v._v("一般是使用"),_("code",[v._v("TCP")]),v._v("协议数据传输，当然传输协议并不是"),_("code",[v._v("RPC")]),v._v("的重点，一般使用"),_("code",[v._v("TCP")]),v._v("协议传输是因为其效率高，使用"),_("code",[v._v("HTTP")]),v._v("协议传输是完全可行的。")]),v._v(" "),_("li",[v._v("在性能方面，"),_("code",[v._v("RPC")]),v._v("的传输效率高于"),_("code",[v._v("RESTful")]),v._v("数据传输的效率，因为"),_("code",[v._v("RCP")]),v._v("具有高效紧凑的进程通信机制，且传输数据量小，在交换大量消息时效率高。")]),v._v(" "),_("li",[v._v("在灵活度方面，"),_("code",[v._v("RESTful")]),v._v("架构的灵活度高于"),_("code",[v._v("RPC")]),v._v("架构，使用"),_("code",[v._v("RESTful")]),v._v("架构具有比较好的可读性，"),_("code",[v._v("RPC")]),v._v("在编写与调试时略显繁琐。")]),v._v(" "),_("li",[v._v("使用"),_("code",[v._v("RESTful")]),v._v("架构的接口进行数据传输可以得到多语言支持，"),_("code",[v._v("HTTP")]),v._v("协议相对更规范、更通用、更标准，对于中间件而言最先支持的几种协议都包含"),_("code",[v._v("RESTful")]),v._v("数据传输规范。")]),v._v(" "),_("li",[v._v("内部服务的相互调用推荐使用"),_("code",[v._v("RPC")]),v._v("，而对外的接口推荐使用"),_("code",[v._v("RESTful")]),v._v("，例如微服务架构模式一般就采用对内"),_("code",[v._v("RPC")]),v._v("对外"),_("code",[v._v("RESTful")]),v._v("的模式。")])]),v._v(" "),_("h2",{attrs:{id:"每日一题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[v._v("#")]),v._v(" 每日一题")]),v._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("https://github.com/WindrunnerMax/EveryDay\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("https://www.jianshu.com/p/7d6853140e13\nhttps://www.jianshu.com/p/ee92c9accedd\nhttps://www.zhihu.com/question/28570307\nhttps://www.zhihu.com/question/25536695\nhttps://www.runoob.com/w3cnote/restful-architecture.html\nhttps://blog.csdn.net/bieleyang/article/details/76272699\nhttps://blog.csdn.net/u014590757/article/details/80233901\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br"),_("span",{staticClass:"line-number"},[v._v("4")]),_("br"),_("span",{staticClass:"line-number"},[v._v("5")]),_("br"),_("span",{staticClass:"line-number"},[v._v("6")]),_("br"),_("span",{staticClass:"line-number"},[v._v("7")]),_("br")])])])}),[],!1,null,null,null);e.default=a.exports}}]);