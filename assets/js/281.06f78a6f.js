(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{647:function(e,v,_){"use strict";_.r(v);var s=_(45),t=Object(s.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"systemctl命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#systemctl命令"}},[e._v("#")]),e._v(" systemctl命令")]),e._v(" "),_("p",[_("code",[e._v("Systemd")]),e._v("是一个命令组，涉及到系统管理的方方面面，而"),_("code",[e._v("systemctl")]),e._v("是"),_("code",[e._v("Systemd")]),e._v("的主命令，用于管理系统。")]),e._v(" "),_("h2",{attrs:{id:"描述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[e._v("#")]),e._v(" 描述")]),e._v(" "),_("p",[e._v("在历史上"),_("code",[e._v("Linux")]),e._v("的启动一直采用"),_("code",[e._v("init")]),e._v("进程，这种方法有两个缺点，一是启动时间长，"),_("code",[e._v("init")]),e._v("进程是串行启动，只有前一个进程启动完，才会启动下一个进程，二是启动脚本复杂，"),_("code",[e._v("init")]),e._v("进程只是执行启动脚本，不管其他事情，脚本需要自己处理各种情况，这往往使得脚本变得很长。"),_("br"),e._v(" "),_("code",[e._v("Systemd")]),e._v("就是为了解决这些问题而诞生的，它的设计目标是，为系统的启动和管理提供一套完整的解决方案，根据"),_("code",[e._v("Linux")]),e._v("惯例，字母"),_("code",[e._v("d")]),e._v("是守护进程"),_("code",[e._v("daemon")]),e._v("的缩写，"),_("code",[e._v("Systemd")]),e._v("这个名字的含义，就是它要守护整个系统。使用了"),_("code",[e._v("Systemd")]),e._v("，就不需要再用"),_("code",[e._v("init")]),e._v("了，"),_("code",[e._v("Systemd")]),e._v("取代了"),_("code",[e._v("initd")]),e._v("，成为系统的第一个进程"),_("code",[e._v("PID")]),e._v("等于"),_("code",[e._v("1")]),e._v("，其他进程都是它的子进程，"),_("code",[e._v("Systemd")]),e._v("的优点是功能强大，使用方便，缺点是体系庞大，非常复杂，事实上，现在还有很多人反对使用"),_("code",[e._v("Systemd")]),e._v("，理由就是它过于复杂，与操作系统的其他部分强耦合，违反"),_("code",[e._v("keep simple, keep stupid")]),e._v("的"),_("code",[e._v("Unix")]),e._v("哲学。")]),e._v(" "),_("h2",{attrs:{id:"语法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[e._v("#")]),e._v(" 语法")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("OPTIONS"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("."),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("COMMAND"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("h2",{attrs:{id:"参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[e._v("#")]),e._v(" 参数")]),e._v(" "),_("h3",{attrs:{id:"options"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" OPTIONS")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("-t, --type=")]),e._v(": 参数应该是以逗号分隔的单元类型列表，例如"),_("code",[e._v("service")]),e._v("和"),_("code",[e._v("socket")]),e._v("，如果其中一个参数是单位类型，则在列出单位时，将显示限制为某些单位类型，否则将显示所有类型的单位，作为一种特殊情况，如果其中一个参数是"),_("code",[e._v("help")]),e._v("，则将打印允许值的列表，程序将退出。")]),e._v(" "),_("li",[_("code",[e._v("--state=")]),e._v(": 参数应该是以逗号分隔的单位负载、子状态或活动状态列表，列出单位时，仅显示处于指定状态的单位。")]),e._v(" "),_("li",[_("code",[e._v("-p, --property=")]),e._v(": 使用"),_("code",[e._v("show")]),e._v("命令显示"),_("code",[e._v("unit/job/manager")]),e._v("属性时，将显示限制为参数指定的某些属性，如果未指定，则显示所有集合属性，参数应该是以逗号分隔的属性名列表，例如"),_("code",[e._v("MainPID")]),e._v("，如果多次指定，将显示具有指定名称的所有属性。")]),e._v(" "),_("li",[_("code",[e._v("-a, --all")]),e._v(": 列出单位时，请显示所有加载的单位，无论其状态如何，包括不活动的单位，显示"),_("code",[e._v("unit/job/manager")]),e._v("属性时，无论是否设置，都显示所有属性，要列出系统上安装的所有单元，请改用"),_("code",[e._v("list-unit-files")]),e._v("命令。")]),e._v(" "),_("li",[_("code",[e._v("-r, --recursive")]),e._v(": 当列出单位时，还显示本地容器的单位，本地容器的单位将以容器名称为前缀，并用单个冒号"),_("code",[e._v(":")]),e._v("分隔。")]),e._v(" "),_("li",[_("code",[e._v("--reverse")]),e._v(": 显示具有列表依赖性的单元之间的反向依赖性，即在给定单元上具有类型为"),_("code",[e._v("Wants=")]),e._v("或"),_("code",[e._v("Requires=")]),e._v("的单元。")]),e._v(" "),_("li",[_("code",[e._v("--after")]),e._v(": 使用"),_("code",[e._v("list-dependencies")]),e._v("列表依赖项，显示在指定单位之前排序的单位，换句话说，列出在指定单元的"),_("code",[e._v("After=")]),e._v("指令中的单元、在"),_("code",[e._v("Before=")]),e._v("指令中有指定单元的单元，或者是指定单元的隐式依赖项。")]),e._v(" "),_("li",[_("code",[e._v("--before")]),e._v(": 使用"),_("code",[e._v("list-dependencies")]),e._v("列表依赖项，显示在指定单位之后排序的单位，换言之，列出在指定单元的"),_("code",[e._v("Before=")]),e._v("指令中、在"),_("code",[e._v("After=")]),e._v("指令中具有指定单元或以其他方式依赖于指定单元的单元。")]),e._v(" "),_("li",[_("code",[e._v("-l, --full")]),e._v(": 不省略状态，即"),_("code",[e._v("list-units")]),e._v("列表单元、"),_("code",[e._v("list-jobs")]),e._v("列表作业和"),_("code",[e._v("list-timers")]),e._v("列表计时器的输出中的单元名称，"),_("code",[e._v("process tree entries")]),e._v("过程树条目，"),_("code",[e._v("journal output")]),e._v("日志输出或"),_("code",[e._v("truncate unit descriptions")]),e._v("截断单元描述。")]),e._v(" "),_("li",[_("code",[e._v("--show-types")]),e._v(": 显示套接字时，显示套接字的类型。")]),e._v(" "),_("li",[_("code",[e._v("--job-mode=")]),e._v(": 将新作业排队时，此选项控制如何处理已排队的作业，它采用"),_("code",[e._v("fail")]),e._v("、"),_("code",[e._v("replace")]),e._v("、"),_("code",[e._v("replace")]),e._v("、"),_("code",[e._v("replace-irreversibly")]),e._v("、"),_("code",[e._v("isolate")]),e._v("、"),_("code",[e._v("ignore dependencies")]),e._v("、"),_("code",[e._v("ignore requirements")]),e._v("或"),_("code",[e._v("flush")]),e._v("之一，默认为"),_("code",[e._v("replace")]),e._v("，除非使用了表示隔离作业模式的"),_("code",[e._v("isolate")]),e._v("命令。如果指定了"),_("code",[e._v("fail")]),e._v("，并且请求的操作与挂起的作业冲突，更具体地说导致已挂起的开始作业反转为停止作业，反之亦然，则导致操作失败。如果指定了"),_("code",[e._v("replace")]),e._v("默认值，则将根据需要替换任何冲突的挂起作业。如果指定了"),_("code",[e._v("replace-irreversibly")]),e._v("，则按"),_("code",[e._v("replace")]),e._v("操作，但也要将新作业标记为不可逆，这可以防止将来发生冲突的事务替换这些作业，甚至在不可逆作业仍挂起时排队，仍然可以使用"),_("code",[e._v("cancel")]),e._v("命令取消不可逆的作业。"),_("code",[e._v("isolate")]),e._v("仅对启动操作有效，并在启动指定单元时导致所有其他单元停止。使用隔离命令时，始终使用此模式。"),_("code",[e._v("flush")]),e._v("将导致在新作业排队时取消所有排队作业。如果指定了"),_("code",[e._v("ignore-dependencies")]),e._v("，那么将忽略此新作业的所有单元依赖项，并立即执行该操作，如果通过，则不会引入所通过单元的任何必需单元，并且不会遵循任何排序依赖关系，这主要是管理员的调试和救援工具，不应该被应用程序使用。"),_("code",[e._v("ignore-requirements")]),e._v("与"),_("code",[e._v("ignore-dependencies")]),e._v("类似，但只会导致忽略需求依赖项，排序依赖项仍将得到满足。")]),e._v(" "),_("li",[_("code",[e._v("-i, --ignore-inhibitors")]),e._v(": 当系统关闭或请求睡眠状态时，忽略抑制器锁，应用程序可以建立抑制器锁，以避免某些重要操作如"),_("code",[e._v("CD")]),e._v("刻录等被系统关闭或睡眠状态中断，任何用户都可以使用这些锁，特权用户可以重写这些锁，如果使用任何锁，关机和睡眠状态请求通常会失败无论是否具有特权，并打印活动锁的列表，但是如果指定了"),_("code",[e._v("--ignore inhibitors")]),e._v("，则会忽略锁而不打印，并且无论如何都会尝试该操作，可能需要额外的权限。")]),e._v(" "),_("li",[_("code",[e._v("-q, --quiet")]),e._v(": 禁止"),_("code",[e._v("snapshot")]),e._v("、"),_("code",[e._v("is-active")]),e._v("、"),_("code",[e._v("is-failed")]),e._v("、"),_("code",[e._v("is-enabled")]),e._v("、"),_("code",[e._v("is-system-running")]),e._v("、"),_("code",[e._v("enable")]),e._v("和"),_("code",[e._v("disable")]),e._v("的输出为标准输出。")]),e._v(" "),_("li",[_("code",[e._v("--no-block")]),e._v(": 不要同步等待请求的操作完成，如果未指定，则将验证作业，将其加入队列，并且"),_("code",[e._v("systemctl")]),e._v("将等待直到完成，通过传递此参数，仅对其进行验证和排队。")]),e._v(" "),_("li",[_("code",[e._v("--no-legend")]),e._v(": 不打印图例，即带有提示的列标题和页脚。")]),e._v(" "),_("li",[_("code",[e._v("--user")]),e._v(": 与主叫用户的服务管理员传递信息，而不是与系统的服务管理员联系。")]),e._v(" "),_("li",[_("code",[e._v("--system")]),e._v(": 与系统的服务管理传递信息，这是默认值。")]),e._v(" "),_("li",[_("code",[e._v("--failed")]),e._v(": 列出失败状态的单元，这等效于"),_("code",[e._v("--state=failed")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("--no-wall")]),e._v(": 停止，关闭电源，重新启动之前，不发送"),_("code",[e._v("wall message")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("--global")]),e._v(": 当与"),_("code",[e._v("enable")]),e._v("和"),_("code",[e._v("disable")]),e._v("一起使用时，对全局用户配置目录进行操作，从而全局地启用或禁用所有用户将来登录的单元文件。")]),e._v(" "),_("li",[_("code",[e._v("--no-reload")]),e._v(": 当与"),_("code",[e._v("enable")]),e._v("和"),_("code",[e._v("disable")]),e._v("一起使用时，不要在执行更改后隐式地重新加载守护程序配置。")]),e._v(" "),_("li",[_("code",[e._v("--no-ask-password")]),e._v(": 与"),_("code",[e._v("start")]),e._v("和相关命令一起使用时，禁用询问密码，后台服务可能需要输入密码或密码短语字符串，例如解锁系统硬盘或加密证书，除非指定了此选项并且命令是从终端调用的，否则"),_("code",[e._v("systemctl")]),e._v("将在终端上向用户查询必要的机密，使用此选项可关闭此行为，在这种情况下，必须通过其他方式例如图形密码代理提供密码，否则服务可能会失败，这还禁止查询用户以进行特权操作的身份验证。")]),e._v(" "),_("li",[_("code",[e._v("--kill-who=")]),e._v(": 与"),_("code",[e._v("kill")]),e._v("一起使用时，选择要向哪个进程发送信号，必须是"),_("code",[e._v("main")]),e._v("、"),_("code",[e._v("control")]),e._v("或"),_("code",[e._v("all")]),e._v("中的一个，以选择是仅终止主进程、控制进程还是终止单元的所有进程，单元的主要过程是定义其生命周期的过程，一个单元的控制过程是由管理者调用以引起其状态变化的过程。例如由于服务单元的"),_("code",[e._v("ExecStartPre=")]),e._v("、"),_("code",[e._v("ExecStop=")]),e._v("或"),_("code",[e._v("ExecReload=")]),e._v("设置而启动的所有进程都是控制进程，注意每个单元一次只有一个控制过程，因为一次只执行一个状态更改，对于"),_("code",[e._v("type=forking")]),e._v("的服务，"),_("code",[e._v("ExecStart=manager")]),e._v("启动的初始进程是一个控制进程，而最终由该进程派生的进程则被视为单元的主进程(如果可以确定的话)，对于其他类型的服务单元，这是不同的，在这些服务单元中，"),_("code",[e._v("ExecStart=")]),e._v("的管理器分叉的进程始终是主进程本身，一个服务单元由零个或一个主进程、零个或一个控制进程以及任意数量的附加进程组成，然而并不是所有的单元类型都管理这些类型的流程，例如对于"),_("code",[e._v("mount")]),e._v("单元，定义了控制进程即"),_("code",[e._v("/bin/mount")]),e._v("和"),_("code",[e._v("/bin/umount")]),e._v("的调用，但没有定义主进程，如果省略，则默认为"),_("code",[e._v("all")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("-s, --signal=")]),e._v(": 与"),_("code",[e._v("kill")]),e._v("一起使用时，选择要发送到选定进程的信号，必须是众所周知的信号说明符之一，如"),_("code",[e._v("SIGTERM")]),e._v("、"),_("code",[e._v("SIGINT")]),e._v("或"),_("code",[e._v("SIGSTOP")]),e._v("，如果省略，则默认为"),_("code",[e._v("SIGTERM")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("-f, --force")]),e._v(": 与"),_("code",[e._v("enable")]),e._v("一起使用时，覆盖任何现有的冲突符号链接，当与"),_("code",[e._v("halt")]),e._v("、"),_("code",[e._v("poweroff")]),e._v("、"),_("code",[e._v("reboot")]),e._v("或"),_("code",[e._v("kexec")]),e._v("一起使用时，执行所选操作而不关闭所有单元，但是所有进程都将被强制终止，所有文件系统都以只读方式卸载或重新装载，因此这是一个要求立即重启的激烈但相对安全的选择，如果为这些操作指定了"),_("code",[e._v("--force")]),e._v("两次，它们将立即执行，而不会终止任何进程或卸载任何文件系统，警告在这些操作中指定"),_("code",[e._v("--force")]),e._v("两次可能会导致数据丢失。")]),e._v(" "),_("li",[_("code",[e._v("--root=")]),e._v(": 当与"),_("code",[e._v("enable/disable/is enabled")]),e._v("和相关命令一起使用时，在查找单位文件时使用备用根路径。")]),e._v(" "),_("li",[_("code",[e._v("--runtime")]),e._v(": 当与"),_("code",[e._v("enable")]),e._v("、"),_("code",[e._v("disable")]),e._v("和相关命令一起使用时，仅临时进行更改，以便在下次重新启动时丢失更改，这将产生这样的效果，更改不是在"),_("code",[e._v("/etc")]),e._v("的子目录中进行的，而是在"),_("code",[e._v("/run")]),e._v("中进行的，具有相同的即时效果，但是由于后者在重新启动时丢失，因此更改也会丢失，类似地，当与"),_("code",[e._v("set")]),e._v("属性一起使用时，仅临时进行更改，以便在下次重新启动时丢失更改。")]),e._v(" "),_("li",[_("code",[e._v("--preset-mode=")]),e._v(": 取"),_("code",[e._v("full")]),e._v("默认、"),_("code",[e._v("enable only")]),e._v("、"),_("code",[e._v("disable only")]),e._v("之一，当与预设或预设所有命令一起使用时，控制是根据预设规则禁用和启用单元，还是仅启用或仅禁用单元。")]),e._v(" "),_("li",[_("code",[e._v("-n, --lines=")]),e._v(": 与"),_("code",[e._v("status")]),e._v("一起使用时，控制要显示的日志行数，从最近的行开始计算，接受一个正整数参数，默认为"),_("code",[e._v("10")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("-o, --output=")]),e._v(": 与状态一起使用时，控制显示的日记账分录的格式，有关可用选项，请参见"),_("code",[e._v("journalctl")]),e._v("，默认为"),_("code",[e._v("short")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("--plain")]),e._v(": 与"),_("code",[e._v("list-dependencies")]),e._v("列表依赖项一起使用时，输出将打印为列表而不是树。")]),e._v(" "),_("li",[_("code",[e._v("-H, --host=")]),e._v(": 远程执行操作，指定要连接的主机名，或用户名和主机名之间用"),_("code",[e._v("@")]),e._v("分隔，主机名的后缀可以是一个容器名，用"),_("code",[e._v(":")]),e._v("分隔，它直接连接到指定主机上的特定容器，这将使用"),_("code",[e._v("SSH")]),e._v("与远程"),_("code",[e._v("machinemanager")]),e._v("实例通信，容器名称可以用"),_("code",[e._v("machinectl-H HOST")]),e._v("枚举。")]),e._v(" "),_("li",[_("code",[e._v("-M, --machine=")]),e._v(": 在本地容器上执行操作，指定要连接到的容器名称。")]),e._v(" "),_("li",[_("code",[e._v("-h, --help")]),e._v(": 输出帮助信息。")]),e._v(" "),_("li",[_("code",[e._v("--version")]),e._v(": 输出版本信息。")])]),e._v(" "),_("h3",{attrs:{id:"unit-commands"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#unit-commands"}},[e._v("#")]),e._v(" Unit Commands")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("list-units [PATTERN...]")]),e._v(": 列出已知单位，受"),_("code",[e._v("-t")]),e._v("规定的限制，如果指定了一个或多个模式，则只显示与其中一个模式匹配的单元，这是默认"),_("code",[e._v("PATTERN")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("list-sockets [PATTERN...]")]),e._v(": 列出按侦听地址排序的套接字单元。如果指定了一个或多个模式，则仅显示与其中一个模式匹配的套接字单元。")]),e._v(" "),_("li",[_("code",[e._v("list-timers [PATTERN...]")]),e._v(": 列出计时器单位，按它们下一次经过的时间排序，如果指定了一个或多个模式，则只显示与其中一个模式匹配的单元。")]),e._v(" "),_("li",[_("code",[e._v("start PATTERN...")]),e._v(": 启动(激活)命令行上指定的一个或多个单元，请注意全局模式在当前已加载的单位列表上运行，通常不处于活动状态且未处于故障状态的单元不会被加载，并且不会通过任何模式进行匹配，另外在实例化单元的情况下，"),_("code",[e._v("systemd")]),e._v("通常在启动实例之前才知道实例名称，因此将"),_("code",[e._v("glob")]),e._v("模式与"),_("code",[e._v("start")]),e._v("一起使用具有有限的用途。")]),e._v(" "),_("li",[_("code",[e._v("stop PATTERN...")]),e._v(": 停止(停用)命令行上指定的一个或多个单位。")]),e._v(" "),_("li",[_("code",[e._v("reload PATTERN...")]),e._v(": 要求命令行上列出的所有单位重新加载其配置，请注意这将重新加载特定于服务的配置，而不是"),_("code",[e._v("systemd")]),e._v("的单元配置文件，如果希望"),_("code",[e._v("systemd")]),e._v("重新加载单元的配置文件，请使用"),_("code",[e._v("daemon reload")]),e._v("命令，例如对于"),_("code",[e._v("Apache")]),e._v("的示例，这将重新加载"),_("code",[e._v("Apache")]),e._v("的"),_("code",[e._v("httpd.conf")]),e._v("文件在"),_("code",[e._v("web")]),e._v("服务器中，而不是"),_("code",[e._v("apache.service")]),e._v("服务系统单位文件，此命令不应与守护进程重载或加载命令混淆。")]),e._v(" "),_("li",[_("code",[e._v("restart PATTERN...")]),e._v(": 重新启动命令行中指定的一个或多个单元，如果这些单元还没有运行，它们将被启动。")]),e._v(" "),_("li",[_("code",[e._v("try-restart PATTERN...")]),e._v(": 如果一个或多个单元正在运行，则重新启动命令行中指定的一个或多个单元，如果单元没有运行，则不会执行任何操作，注意，为了与"),_("code",[e._v("Red Hat init")]),e._v("脚本兼容，"),_("code",[e._v("condrestart")]),e._v("等价于这个命令。")]),e._v(" "),_("li",[_("code",[e._v("reload-or-restart PATTERN...")]),e._v(": 如果单位支持的话则重新加载，否则，重新启动它们，如果这些单元还没有运行，它们将被启动。")]),e._v(" "),_("li",[_("code",[e._v("reload-or-try-restart PATTERN...")]),e._v(": 如果单位支持的话则重新加载，否则，重新启动它们。如果这些单元没有运行，这将不起任何作用，注意，为了与"),_("code",[e._v("SysV init")]),e._v("脚本兼容，"),_("code",[e._v("force reload")]),e._v("相当于这个命令。")]),e._v(" "),_("li",[_("code",[e._v("isolate NAME")]),e._v(": 启动命令行上指定的单元及其依赖项，并停止所有其他单元，这类似于在传统的"),_("code",[e._v("init")]),e._v("系统中更改运行级别，"),_("code",[e._v("isolate")]),e._v("命令将立即停止新单元中未启用的进程，可能包括当前使用的图形环境或终端，请注意，这只允许在启用"),_("code",[e._v("AllowIsolate=")]),e._v("的单元上使用，详情请参见"),_("code",[e._v("systemd.unit")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("kill PATTERN...")]),e._v(": 向设备的一个或多个进程发送信号，使用"),_("code",[e._v("--kill who=")]),e._v("选择要终止的进程，使用"),_("code",[e._v("--signal=")]),e._v("选择要发送的信号。")]),e._v(" "),_("li",[_("code",[e._v("is-active PATTERN...")]),e._v(": 检查是否有任何指定的单元处于活动状态，即正在运行，如果至少有一个处于活动状态，则返回退出代码0，否则返回非零，除非指定"),_("code",[e._v("--quiet")]),e._v("，否则这也会将当前单位状态打印到标准输出。")]),e._v(" "),_("li",[_("code",[e._v("is-failed PATTERN...")]),e._v(": 检查指定的单元是否处于失败状态，如果至少有一个失败，则返回退出代码"),_("code",[e._v("0")]),e._v("，否则返回非零，除非指定"),_("code",[e._v("--quiet")]),e._v("，否则这也会将当前单位状态打印到标准输出。")]),e._v(" "),_("li",[_("code",[e._v("status [PATTERN...|PID...]]")]),e._v(": 显示关于一个或多个单元的简要运行时状态信息，然后是来自日志的最新日志数据，如果未指定单位，则显示系统状态，如果与"),_("code",[e._v("--all")]),e._v("组合，也显示所有单元的状态(受"),_("code",[e._v("-t")]),e._v("指定的限制)，如果传入"),_("code",[e._v("PID")]),e._v("，则显示该进程所属的单元信息，这个函数的目的是生成人类可读的输出，如果您正在寻找计算机可解析的输出，请使用"),_("code",[e._v("show")]),e._v("代替，默认情况下，这个函数只显示"),_("code",[e._v("10")]),e._v("行输出和椭圆线以适应终端窗口，这可以用"),_("code",[e._v("--lines")]),e._v("和"),_("code",[e._v("--full")]),e._v("来更改，此外"),_("code",[e._v("journalctl --unit=NAME")]),e._v("或"),_("code",[e._v("journalctl --user-unit=NAME")]),e._v("对消息使用了类似的过滤器，可能更方便。")]),e._v(" "),_("li",[_("code",[e._v("show [PATTERN...|JOB...]")]),e._v(": 显示一个或多个单元、作业或管理器本身的属性，如果未指定参数，则将显示管理器的属性，默认情况下，将禁止空属性。用"),_("code",[e._v("--all")]),e._v("的来显示所有属性，要选择要显示的特定属性，请使用"),_("code",[e._v("--property=")]),e._v("，此命令用于需要计算机可分析输出时，如果要查找格式化的可读输出，请使用"),_("code",[e._v("status")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("cat PATTERN...")]),e._v(": 显示一个或多个单元的备份文件，打印单元的"),_("code",[e._v("fragment")]),e._v("和"),_("code",[e._v("drop-ins")]),e._v("(源文件)，每个文件前面都有一个注释，其中包含文件名。")]),e._v(" "),_("li",[_("code",[e._v("set-property NAME ASSIGNMENT...")]),e._v(": 在支持的运行时设置指定的单元属性，这允许在运行时更改配置参数属性，例如资源控制设置，并非所有属性都可以在运行时更改，但许多资源控制设置"),_("code",[e._v("systemd.resource-control")]),e._v("可以，更改会立即应用，并存储在磁盘上以备将来引导，除非传递了"),_("code",[e._v("--runtime")]),e._v("，在这种情况下，设置只应用到下一次重新启动，属性赋值的语法与单位文件中赋值的语法非常相似。例如"),_("code",[e._v("systemctl set-property foobar.service CPUShares=777")]),e._v("，请注意，此命令允许同时更改多个属性，这比单独设置属性更好，与单元文件配置设置一样，将空列表指定给列表参数将重置列表。")]),e._v(" "),_("li",[_("code",[e._v("help PATTERN...|PID...")]),e._v(": 显示一个或多个单元的手册页(如果可用)，如果给定"),_("code",[e._v("PID")]),e._v("，则会显示流程所属单元的手册页。")]),e._v(" "),_("li",[_("code",[e._v("reset-failed [PATTERN...]")]),e._v(": 重置指定单元的"),_("code",[e._v("fail")]),e._v("状态，或者如果没有传递单元名称，则重置所有单元的状态，当一个单元以某种方式发生故障(即进程带非零错误代码退出、异常终止或超时)时，它将自动进入"),_("code",[e._v("fail")]),e._v("状态，并记录其退出代码和状态供管理员自查，直到使用此命令重新启动或重设服务。")]),e._v(" "),_("li",[_("code",[e._v("list-dependencies [NAME]")]),e._v(": 显示指定单位的所需单位和所需单位，如果没有指定单位，目标单位会递归展开，当传递"),_("code",[e._v("--all")]),e._v("时，所有其他单元也会递归展开。")])]),e._v(" "),_("h3",{attrs:{id:"unit-file-commands"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#unit-file-commands"}},[e._v("#")]),e._v(" Unit File Commands")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("list-unit-files [PATTERN...]")]),e._v(": 列出已安装的单元文件，如果指定了一个或多个模式，则只显示其文件名(只是路径的最后一个组件)与其中一个匹配的单元。")]),e._v(" "),_("li",[_("code",[e._v("enable NAME...")]),e._v(": 根据命令行上的指定，启用一个或多个单位文件或单位文件实例，这将创建许多符号链接，这些符号链接编码在单元文件的"),_("code",[e._v("[Install]")]),e._v("部分，创建符号链接后，将重新加载"),_("code",[e._v("systemd")]),e._v("配置(以相当于"),_("code",[e._v("daemon reload")]),e._v("的方式)，以确保立即考虑更改，请注意，这不会同时启动任何启用的单元。如果需要，必须为装置调用单独的启动命令，另请注意，在启用实例的情况下，将在安装位置创建名为"),_("code",[e._v("same as instances")]),e._v("的符号链接，但是它们都指向相同的模板单元文件，此命令将打印执行的操作，这个输出可以通过传递"),_("code",[e._v("--quiet")]),e._v("来抑制，请注意，此操作仅为单元创建建议的符号链接，虽然此命令是操作单元配置目录的推荐方法，但管理员可以通过在目录中放置或删除符号链接来手动进行其他更改，这对于创建与建议的默认安装不同的配置特别有用，在这种情况下，管理员必须确保根据需要手动调用"),_("code",[e._v("daemon reload")]),e._v("，以确保将更改考虑在内。启动单元不应与启动(激活)单元混淆，就像启动命令所做的那样，启用和启动装置是正交的，装置可以不启动就启用，也可以不启动就启动，启用只需将单元挂接到各种建议的位置，例如，这样在引导时或插入特定类型的硬件时，单元就会自动启动。启动实际上会生成守护进程(对于服务单元)，或者绑定套接字(对于套接字单元)等等。根据是否指定了"),_("code",[e._v("--system")]),e._v("、"),_("code",[e._v("--user")]),e._v("、"),_("code",[e._v("--runtime")]),e._v("或"),_("code",[e._v("--global")]),e._v("，这将为系统、仅为调用用户、仅为系统的此引导、所有用户的所有将来登录或仅为此引导启用该单元，请注意，在最后一种情况下，不会重新加载"),_("code",[e._v("systemd")]),e._v("守护程序配置。")]),e._v(" "),_("li",[_("code",[e._v("disable NAME...")]),e._v(": 禁用一个或多个单位，这将从单元配置目录中删除指向指定单元文件的所有符号链接，从而撤消"),_("code",[e._v("enable")]),e._v("所做的更改，但是请注意，这将删除指向单元文件的所有符号链接(即包括手动添加)，而不仅仅是那些由"),_("code",[e._v("enable")]),e._v("实际创建的符号链接，在完成单元的禁用之后，此调用隐式地重新加载"),_("code",[e._v("systemd")]),e._v("守护程序配置，请注意，此命令不会隐式停止正在禁用的单元，如果需要这样做，随后应执行一个额外的停止命令，此命令将打印执行的操作，这个输出可以通过传递"),_("code",[e._v("--quiet")]),e._v("来抑制，这个命令以与"),_("code",[e._v("enable")]),e._v("类似的方式接受"),_("code",[e._v("--system")]),e._v("、"),_("code",[e._v("--user")]),e._v("、"),_("code",[e._v("--runtime")]),e._v("和"),_("code",[e._v("--global")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("is-enabled NAME...")]),e._v(": 检查是否启用了任何指定的单位文件(如启用)，如果至少启用了一个，则返回退出代码"),_("code",[e._v("0")]),e._v("，否则返回非零，打印当前启用状态"),_("code",[e._v("enabled")]),e._v("、"),_("code",[e._v("enabled-runtime")]),e._v("、"),_("code",[e._v("linked")]),e._v("、"),_("code",[e._v("linked-runtime")]),e._v("、"),_("code",[e._v("masked")]),e._v("、"),_("code",[e._v("masked-runtime")]),e._v("、"),_("code",[e._v("static")]),e._v("、"),_("code",[e._v("disabled")]),e._v("，要禁止此输出，请使用"),_("code",[e._v("--quiet")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("reenable NAME...")]),e._v(": 按命令行上的指定，重新启用一个或多个单位文件，这是"),_("code",[e._v("disable")]),e._v("和"),_("code",[e._v("enable")]),e._v("的组合，用于将启用单元的符号链接重置为单元文件"),_("code",[e._v("[Install]")]),e._v("部分中配置的默认值。")]),e._v(" "),_("li",[_("code",[e._v("preset NAME...")]),e._v(": 将命令行中指定的一个或多个单位文件重置为预设策略文件中配置的默认值，这与"),_("code",[e._v("disable")]),e._v("或"),_("code",[e._v("enable")]),e._v("具有相同的效果，具体取决于单位在预设文件中的列出方式。使用"),_("code",[e._v("--preset-mode=")]),e._v("控制是启用和禁用单元，还是仅启用或仅禁用单元，有关预设策略格式的详细信息，请参阅"),_("code",[e._v("systemd.preset")]),e._v("，有关预设概念的更多信息，请参阅"),_("code",[e._v("Presetm")]),e._v("文档。")]),e._v(" "),_("li",[_("code",[e._v("preset-all")]),e._v(": 将所有已安装的单元文件重置为预设策略文件中配置的默认值，使用"),_("code",[e._v("--preset mode=")]),e._v("控制是启用和禁用单元，还是仅启用或仅禁用单元。")]),e._v(" "),_("li",[_("code",[e._v("mask NAME...")]),e._v(": 根据命令行上的指定，屏蔽一个或多个单位文件，这将把这些单元链接到"),_("code",[e._v("/dev/null")]),e._v("，使它们无法启动，这是一个更强大的版本的禁用，因为它禁止各种激活的单位，包括手动激活，小心使用此选项，这允许"),_("code",[e._v("--runtime")]),e._v("选项在下次重新启动系统之前临时屏蔽。")]),e._v(" "),_("li",[_("code",[e._v("link FILENAME...")]),e._v(": 将不在单位文件搜索路径中的单位文件链接到单位文件搜索路径，这需要到单位文件的绝对路径，使用"),_("code",[e._v("disable")]),e._v("可以撤消此操作的效果，此命令的效果是，单位文件可用于"),_("code",[e._v("start")]),e._v("和其他命令，尽管它没有直接安装在单位搜索路径中。")]),e._v(" "),_("li",[_("code",[e._v("get-default")]),e._v(": 获取通过"),_("code",[e._v("default.target")]),e._v("链接指定的默认目标。")]),e._v(" "),_("li",[_("code",[e._v("set-default NAME")]),e._v(": 设置默认目标启动，命令将"),_("code",[e._v("default.target")]),e._v("链接到给定的单位。")])]),e._v(" "),_("h3",{attrs:{id:"machine-commands"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#machine-commands"}},[e._v("#")]),e._v(" Machine Commands")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("list-machines [PATTERN...]")]),e._v(": 列出主机和所有运行的本地容器及其状态，如果指定了一个或多个模式，则只显示与其中一个模式匹配的容器。")])]),e._v(" "),_("h3",{attrs:{id:"job-commands"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#job-commands"}},[e._v("#")]),e._v(" Job Commands")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("list-jobs [PATTERN...]")]),e._v(": 列出正在进行的作业，如果指定了一个或多个模式，则仅显示与其中一个模式匹配的单元的作业。")]),e._v(" "),_("li",[_("code",[e._v("cancel JOB...")]),e._v(": 取消命令行上由数字作业ID指定的一个或多个作业，如果未指定作业"),_("code",[e._v("ID")]),e._v("，请取消所有挂起的作业。")])]),e._v(" "),_("h3",{attrs:{id:"snapshot-commands"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#snapshot-commands"}},[e._v("#")]),e._v(" Snapshot Commands")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("snapshot [NAME]")]),e._v(": 创建快照，如果指定了快照名称，则新快照将以该名称命名，如果未指定任何名称，则生成自动快照名称，在这两种情况下，所使用的快照名称都打印到标准输出，除非指定了"),_("code",[e._v("--quiet")]),e._v("，快照是指"),_("code",[e._v("systemd manager")]),e._v("的已保存状态，它本身作为一个单元来实现，这个单元是用这个命令动态生成的，并且依赖于当时所有活动的单元，稍后，用户可以使用快照单元上的隔离命令返回到该状态，快照仅用于保存和还原正在运行或已停止的单元，它们不保存"),_("code",[e._v("/")]),e._v("还原任何其他状态，快照是动态的，在重新启动时丢失。")]),e._v(" "),_("li",[_("code",[e._v("delete PATTERN...")]),e._v(": 删除之前用"),_("code",[e._v("snapshot")]),e._v("创建的快照。")])]),e._v(" "),_("h3",{attrs:{id:"environment-commands"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#environment-commands"}},[e._v("#")]),e._v(" Environment Commands")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("show-environment")]),e._v(": 转储"),_("code",[e._v("systemd manager")]),e._v("环境块，环境块将以适合源代码到"),_("code",[e._v("shell")]),e._v("脚本的直接形式转储，此环境块将传递给管理器生成的所有进程。")]),e._v(" "),_("li",[_("code",[e._v("set-environment VARIABLE=VALUE...")]),e._v(": 按照命令行上的指定，设置一个或多个"),_("code",[e._v("systemd manager")]),e._v("环境变量。")]),e._v(" "),_("li",[_("code",[e._v("unset-environment VARIABLE...")]),e._v(": 取消设置一个或多个"),_("code",[e._v("systemd manager")]),e._v("环境变量，如果只指定了变量名，则无论其值如何，都将删除该变量名，如果指定了一个变量和一个值，则仅当该变量具有指定的值时才会删除该变量。")]),e._v(" "),_("li",[_("code",[e._v("import-environment VARIABLE...")]),e._v(": 将客户机上设置的所有、一个或多个环境变量导入"),_("code",[e._v("systemd manager")]),e._v("环境块，如果没有传递任何参数，则导入整个环境块，否则，应传递一个或多个环境变量名的列表，然后将其客户端值导入到管理器的环境块中。")])]),e._v(" "),_("h3",{attrs:{id:"manager-lifecycle-commands"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#manager-lifecycle-commands"}},[e._v("#")]),e._v(" Manager Lifecycle Commands")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("daemon-reload")]),e._v(": 重新加载"),_("code",[e._v("systemd manager")]),e._v("配置，这将重新加载所有单元文件并重新创建整个依赖关系树，在重新加载守护进程时，"),_("code",[e._v("systemd")]),e._v("代表用户配置侦听的所有套接字都将保持可访问状态，此命令不应与"),_("code",[e._v("load")]),e._v("或"),_("code",[e._v("reload")]),e._v("命令混淆。")]),e._v(" "),_("li",[_("code",[e._v("daemon-reexec")]),e._v(": 重新执行"),_("code",[e._v("systemd manager")]),e._v("，这将序列化管理器状态，重新执行进程并再次反序列化状态，除了调试和包升级之外，这个命令没有什么用处，有时，作为一个重载守护进程，它可能会有所帮助，当守护进程被重新执行时，代表用户配置侦听的所有套接字"),_("code",[e._v("systemd")]),e._v("都将保持可访问状态。")])]),e._v(" "),_("h3",{attrs:{id:"system-commands"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#system-commands"}},[e._v("#")]),e._v(" System Commands")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("is-system-running")]),e._v(": 检查系统是否正在运行，当系统完全启动并运行时，返回"),_("code",[e._v("success")]),e._v("，这意味着不处于启动、关闭或维护模式，否则返回失败，此外，当前状态以短字符串形式打印到标准输出，使用"),_("code",[e._v("--quiet")]),e._v("可以抑制此状态字符串的输出。")]),e._v(" "),_("li",[_("code",[e._v("default")]),e._v(": 进入默认模式，这主要等效于隔离"),_("code",[e._v("default.target")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("rescue")]),e._v(": 进入救援模式，这主要相当于隔离"),_("code",[e._v("rescue.target")]),e._v("，但也会向所有用户打印墙消息。")]),e._v(" "),_("li",[_("code",[e._v("emergency")]),e._v(": 进入紧急模式，这在大多数情况下等效于隔离"),_("code",[e._v("Emergency.target")]),e._v("，但也会向所有用户显示隔离墙消息。")]),e._v(" "),_("li",[_("code",[e._v("halt")]),e._v(": 关闭并停止系统，这主要等效于启动"),_("code",[e._v("halt.target --irreversible")]),e._v("，但还会向所有用户显示一条墙消息，如果与"),_("code",[e._v("--force")]),e._v("结合使用，则将跳过所有正在运行的服务的关闭，但是将终止所有进程，并且将所有文件系统卸载或以只读方式装载，然后立即停止系统，如果两次指定"),_("code",[e._v("--force")]),e._v("，将立即执行该操作，而不会终止任何进程或卸载任何文件系统，这可能会导致数据丢失。")]),e._v(" "),_("li",[_("code",[e._v("poweroff")]),e._v(": 关闭并关闭系统电源，这主要等效于启动"),_("code",[e._v("poweroff.target --irreversible")]),e._v("，但还会向所有用户显示一条墙消息，如果与"),_("code",[e._v("--force")]),e._v("结合使用，将跳过所有正在运行的服务的关闭，但是将终止所有进程，并且将所有文件系统卸载或以只读方式装载，然后立即关闭电源，如果两次指定"),_("code",[e._v("--force")]),e._v("，将立即执行该操作，而不会终止任何进程或卸载任何文件系统，这可能会导致数据丢失。")]),e._v(" "),_("li",[_("code",[e._v("reboot [arg]")]),e._v(": 关闭并重新启动系统，这主要等同于启动"),_("code",[e._v("reboot.target --irreversible")]),e._v("，但还会向所有用户显示一条墙消息，如果与"),_("code",[e._v("--force")]),e._v("结合使用，将跳过所有正在运行的服务的关闭，但是将终止所有进程，并且将所有文件系统卸载或以只读方式装载，然后立即重新引导，如果两次指定"),_("code",[e._v("--force")]),e._v("，将立即执行该操作，而不会终止任何进程或卸载任何文件系统，这可能会导致数据丢失，如果给出了可选参数"),_("code",[e._v("arg")]),e._v("，它将作为可选参数传递给"),_("code",[e._v("reboot")]),e._v("系统调用，该值是体系结构和固件特定的，例如，"),_("code",[e._v("recovery")]),e._v("可用于触发系统恢复，而"),_("code",[e._v("fota")]),e._v("可用于触发"),_("code",[e._v("firmware over the air")]),e._v("更新。")]),e._v(" "),_("li",[_("code",[e._v("kexec")]),e._v(": 通过"),_("code",[e._v("kexec")]),e._v("关闭并重新启动系统，这主要等效于启动"),_("code",[e._v("kexec.target --irreversible")]),e._v("，但还会向所有用户显示一条墙消息，如果与"),_("code",[e._v("--force")]),e._v("结合使用，则将跳过所有正在运行的服务的关闭，但是将终止所有进程，并且将所有文件系统卸载或以只读方式装载，然后立即重新引导。")]),e._v(" "),_("li",[_("code",[e._v("exit")]),e._v(": 要求系统管理员退出，仅用户服务管理器支持此功能，即与"),_("code",[e._v("--user")]),e._v("选项结合使用，否则将失败。")]),e._v(" "),_("li",[_("code",[e._v("suspend")]),e._v(": 挂起系统，这将触发特殊的"),_("code",[e._v("suspend.target")]),e._v("目标的激活。")]),e._v(" "),_("li",[_("code",[e._v("hibernate")]),e._v(": 休眠系统，这将触发特殊的"),_("code",[e._v("hibernate.target")]),e._v("目标的激活。")]),e._v(" "),_("li",[_("code",[e._v("hybrid-sleep")]),e._v(": 休眠并挂起系统。这将触发特殊的"),_("code",[e._v("hybrid-sleep.target")]),e._v("目标的激活。")]),e._v(" "),_("li",[_("code",[e._v("switch-root ROOT [INIT]")]),e._v(": 切换到另一个根目录，并在其下执行新的系统管理器进程，这旨在用于初始"),_("code",[e._v("RAM")]),e._v("磁盘"),_("code",[e._v("initrd")]),e._v("，并将从"),_("code",[e._v("initrd")]),e._v("的系统管理器进程，也称为"),_("code",[e._v("init")]),e._v("进程，过渡到主系统管理器进程，该调用有两个参数，要成为新根目录的目录，以及要在其下以"),_("code",[e._v("PID 1")]),e._v("执行的新系统管理器二进制文件的路径，如果省略后者或为空字符串，则将自动生成"),_("code",[e._v("systemd")]),e._v("二进制文件搜索并用作"),_("code",[e._v("init")]),e._v("，如果省略了系统管理器路径或等于空字符串，则将"),_("code",[e._v("initrd")]),e._v("的系统管理器进程的状态传递给主系统管理器，这允许稍后对"),_("code",[e._v("initrd")]),e._v("引导中涉及的服务的状态进行自查。")])]),e._v(" "),_("h2",{attrs:{id:"unit文件配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#unit文件配置"}},[e._v("#")]),e._v(" UNIT文件配置")]),e._v(" "),_("h3",{attrs:{id:"unit文件类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#unit文件类型"}},[e._v("#")]),e._v(" UNIT文件类型")]),e._v(" "),_("p",[_("code",[e._v("Unit")]),e._v("文件统一了过去各种不同的系统资源配置格式，例如服务的启动、停止、定时任务、设备自动挂载、网络配置、设备配置、虚拟内存配置等，而"),_("code",[e._v("Systemd")]),e._v("通过不同的通过文件的后缀名来区分这些配置文件，"),_("code",[e._v(".service")]),e._v("文件便是其中最常用的一种，下面是"),_("code",[e._v("Systemd")]),e._v("所支持的"),_("code",[e._v("12")]),e._v("种"),_("code",[e._v("Unit")]),e._v("文件类型。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v(".automount")]),e._v(": 用于控制自动挂载文件系统，自动挂载即当某一目录被访问时系统自动挂载该目录，这类"),_("code",[e._v("unit")]),e._v("取代了传统"),_("code",[e._v("Linux")]),e._v("系统的"),_("code",[e._v("autofs")]),e._v("相应功能。")]),e._v(" "),_("li",[_("code",[e._v(".device")]),e._v(": 对应"),_("code",[e._v("/dev")]),e._v("目录下设备，主要用于定义设备之间的依赖关系。")]),e._v(" "),_("li",[_("code",[e._v(".mount")]),e._v(": 定义系统结构层次中的一个挂载点，可以替代过去的"),_("code",[e._v("/etc/fstab")]),e._v("配置文件。")]),e._v(" "),_("li",[_("code",[e._v(".path")]),e._v(": 用于监控指定目录变化，并触发其他"),_("code",[e._v("unit")]),e._v("运行。")]),e._v(" "),_("li",[_("code",[e._v(".scope")]),e._v(": 这类"),_("code",[e._v("unit")]),e._v("文件不是用户创建的，而是"),_("code",[e._v("Systemd")]),e._v("运行时自己产生的，描述一些系统服务的分组信息。")]),e._v(" "),_("li",[_("code",[e._v(".service")]),e._v(": 封装守护进程的启动、停止、重启和重载等操作，是最常见的一种"),_("code",[e._v("unit")]),e._v("类型。")]),e._v(" "),_("li",[_("code",[e._v(".slice")]),e._v(": 用于描述"),_("code",[e._v("cgroup")]),e._v("的一些信息，极少使用到，一般用户就忽略它吧。")]),e._v(" "),_("li",[_("code",[e._v(".snapshot")]),e._v(": 这种"),_("code",[e._v("unit")]),e._v("其实是"),_("code",[e._v("systemctl snapshot")]),e._v("命令创建的一个描述"),_("code",[e._v("Systemd unit")]),e._v("运行状态的快照。")]),e._v(" "),_("li",[_("code",[e._v(".socket")]),e._v(": 监控系统或互联网中的"),_("code",[e._v("socket")]),e._v("消息，用于实现基于网络数据自动触发服务启动。")]),e._v(" "),_("li",[_("code",[e._v(".swap")]),e._v(": 定义一个用于做虚拟内存的交换分区。")]),e._v(" "),_("li",[_("code",[e._v(".target")]),e._v(": 用于对"),_("code",[e._v("unit")]),e._v("进行逻辑分组，引导其他"),_("code",[e._v("unit")]),e._v("的执行，它替代了"),_("code",[e._v("SysV")]),e._v("中运行级别的作用，并提供更灵活的基于特定设备事件的启动方式，例如"),_("code",[e._v("multi-user.target")]),e._v("相当于过去的运行级别"),_("code",[e._v("5")]),e._v("，而"),_("code",[e._v("bluetooth.target")]),e._v("在有蓝牙设备接入时就会被触发。")]),e._v(" "),_("li",[_("code",[e._v(".timer")]),e._v(": 封装由"),_("code",[e._v("system")]),e._v("的里面由时间触发的动作, 替代了"),_("code",[e._v("crontab")]),e._v("的功能。")])]),e._v(" "),_("h3",{attrs:{id:"配置目录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#配置目录"}},[e._v("#")]),e._v(" 配置目录")]),e._v(" "),_("p",[_("code",[e._v("Unit")]),e._v("文件按照"),_("code",[e._v("Systemd")]),e._v("约定，应该被放置在指定的"),_("code",[e._v("3")]),e._v("个系统目录之一，这"),_("code",[e._v("3")]),e._v("个目录是有优先级的，在下面指定的位置优先级依次递减，因此在几个目录中有同名文件的时候，只有优先级最高的目录里的那个会被使用。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("/etc/systemd/system")]),e._v(": 系统或用户提供的配置文件。")]),e._v(" "),_("li",[_("code",[e._v("/run/systemd/system")]),e._v(": 软件运行时生成的配置文件。")]),e._v(" "),_("li",[_("code",[e._v("/usr/lib/systemd/system")]),e._v(": 系统或第三方软件安装时添加的配置文件。")])]),e._v(" "),_("h3",{attrs:{id:"service文件字段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#service文件字段"}},[e._v("#")]),e._v(" Service文件字段")]),e._v(" "),_("p",[e._v("通常我们只需要配置"),_("code",[e._v(".service")]),e._v("文件即可，"),_("code",[e._v(".service")]),e._v("分为三个字符。")]),e._v(" "),_("h4",{attrs:{id:"unit段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#unit段"}},[e._v("#")]),e._v(" Unit段")]),e._v(" "),_("p",[e._v("这些配置中，除了"),_("code",[e._v("Description")]),e._v("外，都能够被添加多次，例如"),_("code",[e._v("After")]),e._v("参数可以使用空格分隔指定所有值，也可以使用多个"),_("code",[e._v("After")]),e._v("参数，在每行参数中指定一个值。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Description")]),e._v(": 一段描述这个"),_("code",[e._v("Unit")]),e._v("文件的文字，通常只是简短的一句话。")]),e._v(" "),_("li",[_("code",[e._v("Documentation")]),e._v(": 指定服务的文档，可以是一个或多个文档的"),_("code",[e._v("URL")]),e._v("路径。")]),e._v(" "),_("li",[_("code",[e._v("Requires")]),e._v(": 依赖的其他"),_("code",[e._v("Unit")]),e._v("列表，列在其中的"),_("code",[e._v("Unit")]),e._v("模块会在这个服务启动的同时被启动，并且如果其中有任意一个服务启动失败，这个服务也会被终止。")]),e._v(" "),_("li",[_("code",[e._v("Wants")]),e._v(": 与"),_("code",[e._v("Requires")]),e._v("相似，但只是在被配置的这个"),_("code",[e._v("Unit")]),e._v("启动时，触发启动列出的每个 "),_("code",[e._v("Unit")]),e._v("模块，而不去考虑这些模块启动是否成功。")]),e._v(" "),_("li",[_("code",[e._v("After")]),e._v(": 与"),_("code",[e._v("Requires")]),e._v("相似，但会在后面列出的所有模块全部启动完成以后，才会启动当前的服务。")]),e._v(" "),_("li",[_("code",[e._v("Before")]),e._v(": 与"),_("code",[e._v("After")]),e._v("相反，在启动指定的任一个模块之前，都会首先确保当前服务已经运行。")]),e._v(" "),_("li",[_("code",[e._v("BindsTo")]),e._v(": 与"),_("code",[e._v("Requires")]),e._v("相似，但是一种更强的关联，启动这个服务时会同时启动列出的所有模块，当有模块启动失败时终止当前服务，反之，只要列出的模块全部启动以后，也会自动启动当前服务。并且这些模块中有任意一个出现意外结束或重启，这个服务会跟着终止或重启。")]),e._v(" "),_("li",[_("code",[e._v("PartOf")]),e._v(": 这是一个"),_("code",[e._v("BindTo")]),e._v("作用的子集，仅在列出的任何模块失败或重启时，终止或重启当前服务，而不会随列出模块的启动而启动。")]),e._v(" "),_("li",[_("code",[e._v("OnFailure")]),e._v(": 当这个模块启动失败时，就自动启动列出的每个模块。")]),e._v(" "),_("li",[_("code",[e._v("Conflicts")]),e._v(": 与这个模块有冲突的模块，如果列出模块中有已经在运行的，这个服务就不能启动，反之亦然。")])]),e._v(" "),_("h4",{attrs:{id:"install段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#install段"}},[e._v("#")]),e._v(" Install段")]),e._v(" "),_("p",[e._v("这个段中的配置与"),_("code",[e._v("Unit")]),e._v("有几分相似，但是这部分配置需要通过"),_("code",[e._v("systemctl enable")]),e._v("命令来激活，并且可以通过"),_("code",[e._v("systemctl disable")]),e._v("命令禁用，另外这部分配置的目标模块通常是特定启动级别的"),_("code",[e._v(".target")]),e._v("文件，用来使得服务在系统启动时自动运行。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("WantedBy")]),e._v(": 和前面的"),_("code",[e._v("Wants")]),e._v("作用相似，只是后面列出的不是服务所依赖的模块，而是依赖当前服务的模块。")]),e._v(" "),_("li",[_("code",[e._v("RequiredBy")]),e._v(": 和前面的"),_("code",[e._v("Requires")]),e._v("作用相似，同样后面列出的不是服务所依赖的模块，而是依赖当前服务的模块。")]),e._v(" "),_("li",[_("code",[e._v("Also")]),e._v(": 当这个服务被"),_("code",[e._v("enable/disable")]),e._v("时，将自动"),_("code",[e._v("enable/disable")]),e._v("后面列出的每个模块。")])]),e._v(" "),_("h4",{attrs:{id:"service段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#service段"}},[e._v("#")]),e._v(" Service段")]),e._v(" "),_("p",[e._v("这个段是"),_("code",[e._v(".service")]),e._v("文件独有的，也是对于服务配置最重要的部分，这部分的配置选项非常多，主要分为服务生命周期控制和服务上下文配置两个方面，下面是一些常用的配置，另外还有一些限制特定服务可用的系统资源量，例如"),_("code",[e._v("CPU")]),e._v("、程序堆栈，文件句柄数量，子进程数量等等，可参考"),_("code",[e._v("Linux")]),e._v("文档资源配额。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Type")]),e._v(": 服务的类型，常用的有"),_("code",[e._v("simple")]),e._v("和"),_("code",[e._v("forking")]),e._v("，默认的"),_("code",[e._v("simple")]),e._v("类型可以适应于绝大多数的场景，因此一般可以忽略这个参数的配置，而如果服务程序启动后会通过"),_("code",[e._v("fork")]),e._v("系统调用创建子进程，然后关闭应用程序本身进程的情况，则应该将"),_("code",[e._v("Type")]),e._v("的值设置为"),_("code",[e._v("forking")]),e._v("，否则"),_("code",[e._v("systemd")]),e._v("将不会跟踪子进程的行为，而认为服务已经退出。")]),e._v(" "),_("li",[_("code",[e._v("RemainAfterExit")]),e._v(": 值为"),_("code",[e._v("true")]),e._v("或"),_("code",[e._v("false")]),e._v("，也可以写"),_("code",[e._v("yes")]),e._v("或"),_("code",[e._v("no")]),e._v("，默认为"),_("code",[e._v("false")]),e._v("，当配置值为"),_("code",[e._v("true")]),e._v("时，"),_("code",[e._v("systemd")]),e._v("只会负责启动服务进程，之后即便服务进程退出了，"),_("code",[e._v("systemd")]),e._v("仍然会认为这个服务是在运行中的，这个配置主要是提供给一些并非常驻内存，而是启动注册后立即退出然后等待消息按需启动的特殊类型服务使用。")]),e._v(" "),_("li",[_("code",[e._v("ExecStart")]),e._v(": 这个参数是几乎每个"),_("code",[e._v(".service")]),e._v("文件都会有的，指定服务启动的主要命令，在每个配置文件中只能使用一次。")]),e._v(" "),_("li",[_("code",[e._v("ExecStartPre")]),e._v(": 指定在启动执行"),_("code",[e._v("ExecStart")]),e._v("的命令前的准备工作，可以有多个，所有命令会按照文件中书写的顺序依次被执行。")]),e._v(" "),_("li",[_("code",[e._v("ExecStartPost")]),e._v(": 指定在启动执行"),_("code",[e._v("ExecStart")]),e._v("的命令后的收尾工作，也可以有多个。")]),e._v(" "),_("li",[_("code",[e._v("TimeoutStartSec")]),e._v(": 启动服务时的等待的秒数，如果超过这个时间服务仍然没有执行完所有的启动命令，则"),_("code",[e._v("systemd")]),e._v("会认为服务自动失败，这一配置对于使用"),_("code",[e._v("Docker")]),e._v("容器托管的应用可能十分重要，由于"),_("code",[e._v("Docker")]),e._v("第一次运行时可以能会需要从网络下载服务的镜像文件，因此造成比较严重的延时，容易被"),_("code",[e._v("systemd")]),e._v("误判为启动失败而杀死，通常对于这种服务，需要将"),_("code",[e._v("TimeoutStartSec")]),e._v("的值指定为"),_("code",[e._v("0")]),e._v("，从而关闭超时检测。")]),e._v(" "),_("li",[_("code",[e._v("ExecStop")]),e._v(": 停止服务所需要执行的主要命令。")]),e._v(" "),_("li",[_("code",[e._v("ExecStopPost")]),e._v(": 指定在"),_("code",[e._v("ExecStop")]),e._v("命令执行后的收尾工作，也可以有多个。")]),e._v(" "),_("li",[_("code",[e._v("TimeoutStopSec")]),e._v(": 停止服务时的等待的秒数，如果超过这个时间服务仍然没有停止，"),_("code",[e._v("systemd")]),e._v("会使用"),_("code",[e._v("SIGKILL")]),e._v("信号强行杀死服务的进程。")]),e._v(" "),_("li",[_("code",[e._v("Restart")]),e._v(": 这个值用于指定在什么情况下需要重启服务进程，常用的值有"),_("code",[e._v("no")]),e._v("、"),_("code",[e._v("on-success")]),e._v("、"),_("code",[e._v("on-failure")]),e._v("、"),_("code",[e._v("on-abnormal")]),e._v("、"),_("code",[e._v("on-abort")]),e._v("和"),_("code",[e._v("always")]),e._v("，默认值为"),_("code",[e._v("no")]),e._v("，即不会自动重启服务。")]),e._v(" "),_("li",[_("code",[e._v("RestartSec")]),e._v(": 如果服务需要被重启，这个参数的值为服务被重启前的等待秒数。")]),e._v(" "),_("li",[_("code",[e._v("ExecReload")]),e._v(": 重新加载服务所需执行的主要命令。")]),e._v(" "),_("li",[_("code",[e._v("Environment")]),e._v(": 为服务添加环境变量。")]),e._v(" "),_("li",[_("code",[e._v("EnvironmentFile")]),e._v(": 指定加载一个包含服务所需的环境变量列表的文件，文件中的每一行都是一个环境变量的定义。")]),e._v(" "),_("li",[_("code",[e._v("Nice")]),e._v(": 服务的进程优先级，值越小优先级越高，默认为"),_("code",[e._v("0")]),e._v("，"),_("code",[e._v("-20")]),e._v("为最高优先级，"),_("code",[e._v("19")]),e._v("为最低优先级。")]),e._v(" "),_("li",[_("code",[e._v("WorkingDirectory")]),e._v(": 指定服务的工作目录。")]),e._v(" "),_("li",[_("code",[e._v("RootDirectory")]),e._v(": 指定服务进程的根目录"),_("code",[e._v("/")]),e._v("，如果配置了这个参数后，服务将无法访问指定目录以外的任何文件。")]),e._v(" "),_("li",[_("code",[e._v("User")]),e._v(": 指定运行服务的用户，会影响服务对本地文件系统的读写执行权限。")]),e._v(" "),_("li",[_("code",[e._v("Group")]),e._v(": 指定运行服务的用户组，会影响服务对本地文件系统的访问权限。")]),e._v(" "),_("li",[_("code",[e._v("StartLimitIntervalSec")]),e._v(": 属于设置单元的启动频率限制，用于设置时长，默认情况下，一个单元在"),_("code",[e._v("10")]),e._v("秒内最多允许启动"),_("code",[e._v("5")]),e._v("次。")]),e._v(" "),_("li",[_("code",[e._v("StartLimitBurst")]),e._v(": 属于设置单元的启动频率限制，用于设置在一段给定的时长内，最多允许启动多少次，默认情况下，一个单元在"),_("code",[e._v("10")]),e._v("秒内最多允许启动"),_("code",[e._v("5")]),e._v("次。")])]),e._v(" "),_("h4",{attrs:{id:"文件示例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#文件示例"}},[e._v("#")]),e._v(" 文件示例")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("[Unit]\nDescription=OpenBSD Secure Shell server\nAfter=network.target auditd.service\nConditionPathExists=!/etc/ssh/sshd_not_to_be_run\n\n[Service]\nEnvironmentFile=-/etc/default/ssh\nExecStartPre=/usr/sbin/sshd -t\nExecStart=/usr/sbin/sshd -D $SSHD_OPTS\nExecReload=/usr/sbin/sshd -t\nExecReload=/bin/kill -HUP $MAINPID\nKillMode=process\nRestart=on-failure\nRestartPreventExitStatus=255\nType=notify\nRuntimeDirectory=sshd\nRuntimeDirectoryMode=0755\n\n[Install]\nWantedBy=multi-user.target\nAlias=sshd.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br"),_("span",{staticClass:"line-number"},[e._v("11")]),_("br"),_("span",{staticClass:"line-number"},[e._v("12")]),_("br"),_("span",{staticClass:"line-number"},[e._v("13")]),_("br"),_("span",{staticClass:"line-number"},[e._v("14")]),_("br"),_("span",{staticClass:"line-number"},[e._v("15")]),_("br"),_("span",{staticClass:"line-number"},[e._v("16")]),_("br"),_("span",{staticClass:"line-number"},[e._v("17")]),_("br"),_("span",{staticClass:"line-number"},[e._v("18")]),_("br"),_("span",{staticClass:"line-number"},[e._v("19")]),_("br"),_("span",{staticClass:"line-number"},[e._v("20")]),_("br"),_("span",{staticClass:"line-number"},[e._v("21")]),_("br")])]),_("h2",{attrs:{id:"示例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[e._v("#")]),e._v(" 示例")]),e._v(" "),_("p",[e._v("开机运行服务。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl "),_("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" nginx.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("查询服务是否开机启动。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl is-enabled nginx.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("取消开机运行。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl disable nginx.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("启动服务。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl start nginx.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("停止服务。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl stop nginx.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("重启服务。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl restart nginx.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("重新加载服务配置文件，修改配置文件后需要首先执行"),_("code",[e._v("systemctl daemon-reload")]),e._v("。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl reload nginx.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("查询服务运行状态。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl status nginx.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("显示启动失败的服务。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl --failed\nsystemctl list-units --state failed\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("p",[e._v("重置单元的启动频率计数器。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl reset-failed\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("重新加载所有被修改过的服务配置，否则配置不会生效，当然实际上该命令还会完成很多事情，例如重新生成依赖树。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl daemon-reload\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("输出所有单元。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl list-units\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("列出所有单元状态概览。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl status\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("查看已激活的服务。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl list-units -t "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("service")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("查看所有已安装服务。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl list-unit-files\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("检查"),_("code",[e._v("nginx")]),e._v("服务的所有配置细节。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl show nginx.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("获取"),_("code",[e._v("nginx")]),e._v("服务的依赖性列表。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl list-dependencies nginx.service\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("查看环境变量。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl show-environment\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("重启系统。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("reboot")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("关闭系统。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl poweroff\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[_("code",[e._v("CPU")]),e._v("停止工作。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("halt")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("暂停系统。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("suspend")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("让系统进入冬眠状态。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl hibernate\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("让系统进入交互式休眠状态。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl hybrid-sleep\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("启动进入救援状态，即单用户状态。")]),e._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[e._v("systemctl rescue\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("h2",{attrs:{id:"每日一题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[e._v("#")]),e._v(" 每日一题")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("https://github.com/WindrunnerMax/EveryDay\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("https://www.cnblogs.com/tsdxdx/p/7288490.html\nhttps://www.cnblogs.com/chjbbs/p/6288592.html\nhttps://www.geeksforgeeks.org/systemctl-in-unix/\nhttp://www.jinbuguo.com/systemd/systemd.unit.html\nhttps://blog.csdn.net/m0_38023255/article/details/78757655\nhttps://www.commandlinux.com/man-page/man1/systemctl.1.html\nhttp://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br")])])])}),[],!1,null,null,null);v.default=t.exports}}]);