(window.webpackJsonp=window.webpackJsonp||[]).push([[284],{650:function(v,_,e){"use strict";e.r(_);var o=e(45),c=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"top命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#top命令"}},[v._v("#")]),v._v(" top命令")]),v._v(" "),e("p",[e("code",[v._v("top")]),v._v("命令提供运行系统的动态实时视图，其可以显示系统摘要信息，以及当前由内核管理的进程或线程的列表，显示的系统摘要信息的类型以及为任务显示的信息的类型、顺序和大小都是用户可配置的。")]),v._v(" "),e("h2",{attrs:{id:"语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[v._v("#")]),v._v(" 语法")]),v._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("top")]),v._v(" -hv "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("|")]),v._v(" -bcHisS -d delay -n limit -u"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("|")]),v._v("U user "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("|")]),v._v(" -p pid -w "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),v._v("cols"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),v._v("\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("h2",{attrs:{id:"参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[v._v("#")]),v._v(" 参数")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("-h")]),v._v(": 输出帮助信息。")]),v._v(" "),e("li",[e("code",[v._v("-v")]),v._v(": 输出版本信息。")]),v._v(" "),e("li",[e("code",[v._v("-b")]),v._v(": 以批处理模式启动"),e("code",[v._v("top")]),v._v("，这对于从"),e("code",[v._v("top")]),v._v("向其他程序或文件发送输出很有用，在这种模式下，"),e("code",[v._v("top")]),v._v("将不接受输入并运行，直到您使用'"),e("code",[v._v("-n")]),v._v("'命令行选项设置了迭代次数限制或终止为止。")]),v._v(" "),e("li",[e("code",[v._v("-c")]),v._v(": 以倒转最后一个记忆中的"),e("code",[v._v("c")]),v._v("状态开始，因此如果"),e("code",[v._v("top")]),v._v("显示命令行，那么现在该字段将显示程序名，反之亦然。")]),v._v(" "),e("li",[e("code",[v._v("-d interval")]),v._v(": 指定屏幕更新之间的延迟，并覆盖个人配置文件中的相应值或启动默认值，启动后也可以使用"),e("code",[v._v("d")]),v._v("或"),e("code",[v._v("s")]),v._v("交互命令更改。")]),v._v(" "),e("li",[e("code",[v._v("-H")]),v._v(": 指示"),e("code",[v._v("top")]),v._v("显示各个线程，如果没有此命令行选项，则显示每个进程中所有线程的总和，启动后可以使用"),e("code",[v._v("H")]),v._v("交互命令更改。")]),v._v(" "),e("li",[e("code",[v._v("-i")]),v._v(": 空闲进程切换，以倒转最后一个记忆中的"),e("code",[v._v("i")]),v._v("状态开始，关闭此切换时，将不显示自上次更新以来未使用任何"),e("code",[v._v("CPU")]),v._v("的任务。")]),v._v(" "),e("li",[e("code",[v._v("-n limit")]),v._v(": 指定"),e("code",[v._v("top")]),v._v("在结束前应产生的最大迭代次数或帧数。")]),v._v(" "),e("li",[e("code",[v._v("-o")]),v._v(": 指定将对任务进行排序的字段的名称，与配置文件中反映的内容无关，您可以在字段名前面加上"),e("code",[v._v("+")]),v._v("或"),e("code",[v._v("-")]),v._v("，以覆盖排序方向，前导"),e("code",[v._v("+")]),v._v("将强制从高到低排序，而"),e("code",[v._v("-")]),v._v("将确保从低到高排序，此选项主要用于支持自动脚本化批处理模式操作。")]),v._v(" "),e("li",[e("code",[v._v("-O")]),v._v(": 此选项作为上述"),e("code",[v._v("-o")]),v._v("选项的帮助形式，它将使"),e("code",[v._v("top")]),v._v("在单独的一行中打印每个可用的字段名，然后退出。")]),v._v(" "),e("li",[e("code",[v._v("-p pid")]),v._v(": 仅监视具有指定进程"),e("code",[v._v("ID")]),v._v("的进程，此选项最多可以给予"),e("code",[v._v("20")]),v._v("次，也可以提供一个逗号分隔的列表，其中最多包含"),e("code",[v._v("20")]),v._v("个"),e("code",[v._v("PID")]),v._v("，允许两种方法混合使用，"),e("code",[v._v("pid")]),v._v("值为零将被视为"),e("code",[v._v("top")]),v._v("程序运行时的进程"),e("code",[v._v("id")]),v._v("，这只是一个命令行选项，如果您希望返回正常操作，则无需退出并重新启动"),e("code",[v._v("top")]),v._v("，只需发出以下任何交互式命令"),e("code",[v._v("=")]),v._v("、"),e("code",[v._v("u")]),v._v("或"),e("code",[v._v("U")]),v._v("，对于"),e("code",[v._v("p")]),v._v("、"),e("code",[v._v("u")]),v._v("和"),e("code",[v._v("U")]),v._v("命令行选项是互斥的。")]),v._v(" "),e("li",[e("code",[v._v("-s")]),v._v(": 安全模式操作，以强制的安全模式启动"),e("code",[v._v("top")]),v._v("，即使对于"),e("code",[v._v("root")]),v._v("也是如此，通过系统配置文件可以更好地控制此模式。")]),v._v(" "),e("li",[e("code",[v._v("-S")]),v._v(": 累计时间切换，以倒转最后一个记忆中的"),e("code",[v._v("S")]),v._v("状态开始，当累计时间模式打开时，每个进程都会列出它及其子进程使用的"),e("code",[v._v("cpu")]),v._v("时间。")]),v._v(" "),e("li",[e("code",[v._v("-u user-id-or-name, -U user-id-or-name")]),v._v(": 仅显示用户"),e("code",[v._v("id")]),v._v("或用户名与给定进程匹配的进程，"),e("code",[v._v("-u")]),v._v("选项匹配有效用户，而"),e("code",[v._v("-U")]),v._v("选项匹配任何用户"),e("code",[v._v("real")]),v._v("、"),e("code",[v._v("effective")]),v._v("、"),e("code",[v._v("saved")]),v._v("或"),e("code",[v._v("filesystem")]),v._v("，在感叹号"),e("code",[v._v("!")]),v._v("前面加上前缀用户"),e("code",[v._v("id")]),v._v("或名称指示"),e("code",[v._v("top")]),v._v("仅显示用户与提供的进程不匹配的进程，"),e("code",[v._v("p")]),v._v("、"),e("code",[v._v("u")]),v._v("和"),e("code",[v._v("U")]),v._v("命令行选项是互斥的。")]),v._v(" "),e("li",[e("code",[v._v("-w number")]),v._v(": 在批处理模式下，如果没有参数，"),e("code",[v._v("top")]),v._v("将使用"),e("code",[v._v("COLUMNS=")]),v._v("和"),e("code",[v._v("LINES=")]),v._v("环境变量(如果设置)格式化输出，否则，宽度将固定在最大"),e("code",[v._v("512")]),v._v("列，通过一个参数，可以减少或增加输出宽度(最多"),e("code",[v._v("512")]),v._v("行)，但行数被认为是无限的，在正常显示模式下，如果没有参数，"),e("code",[v._v("top")]),v._v("将尝试使用"),e("code",[v._v("COLUMNS=")]),v._v("和"),e("code",[v._v("LINES=")]),v._v("环境变量(如果设置)格式化输出，对于参数，输出宽度只能减小，不能增大，无论是使用环境变量还是带有"),e("code",[v._v("-w")]),v._v("的参数，当不处于批处理模式时，都不能超过实际的终端维度，注意如果不使用此命令行选项，输出宽度始终基于调用"),e("code",[v._v("top")]),v._v("的终端，无论是否处于批处理模式。")])]),v._v(" "),e("h2",{attrs:{id:"操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[v._v("#")]),v._v(" 操作")]),v._v(" "),e("p",[v._v("以下启动默认值操作假定没有相关配置文件，即没有用户自定义，此外带星号"),e("code",[v._v("*")]),v._v("的项目可以通过命令行覆盖。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("^Z")]),v._v(": 挂起。")]),v._v(" "),e("li",[e("code",[v._v("fg")]),v._v(": 恢复挂起的命令。")]),v._v(" "),e("li",[e("code",[v._v("<Left>")]),v._v(": 强制屏幕重绘。")]),v._v(" "),e("li",[e("code",[v._v("A")]),v._v(": 交叉显示，默认全屏显示。")]),v._v(" "),e("li",[e("code",[v._v("d")]),v._v(": "),e("code",[v._v("*")]),v._v("延迟时间，默认为"),e("code",[v._v("3s")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("H")]),v._v(": "),e("code",[v._v("*")]),v._v("线程模式，默认关闭。")]),v._v(" "),e("li",[e("code",[v._v("I")]),v._v(": "),e("code",[v._v("Irix")]),v._v("模式，默认开启。")]),v._v(" "),e("li",[e("code",[v._v("p")]),v._v(": "),e("code",[v._v("*")]),v._v("监控"),e("code",[v._v("PID")]),v._v("，默认显示所有进程。")]),v._v(" "),e("li",[e("code",[v._v("1")]),v._v(": 查看服务器的"),e("code",[v._v("cpu")]),v._v("逻辑数。")]),v._v(" "),e("li",[e("code",[v._v("M")]),v._v(": 根据驻留内存大小进行排序。")]),v._v(" "),e("li",[e("code",[v._v("P")]),v._v(": 根据"),e("code",[v._v("CPU")]),v._v("使用百分比大小进行排序。")]),v._v(" "),e("li",[e("code",[v._v("T")]),v._v(": 根据时间"),e("code",[v._v("/")]),v._v("累计时间进行排序。")]),v._v(" "),e("li",[e("code",[v._v("c")]),v._v(": 切换显示命令名称和完整命令行。")]),v._v(" "),e("li",[e("code",[v._v("t")]),v._v(": 切换显示进程和"),e("code",[v._v("CPU")]),v._v("信息。")]),v._v(" "),e("li",[e("code",[v._v("m")]),v._v(": 切换显示内存信息。")]),v._v(" "),e("li",[e("code",[v._v("l")]),v._v(": 切换显示平均负载和启动时间信息 。")]),v._v(" "),e("li",[e("code",[v._v("o")]),v._v(": 改变显示项目的顺序。")]),v._v(" "),e("li",[e("code",[v._v("f")]),v._v(": 从当前显示中添加或删除列项目。")]),v._v(" "),e("li",[e("code",[v._v("S")]),v._v(": 切换到累计模式。")]),v._v(" "),e("li",[e("code",[v._v("s")]),v._v(": 改变两次刷新之间的延迟时间，系统将提示用户输入新的时间，单位为"),e("code",[v._v("s")]),v._v("，如果有小数，就换算成"),e("code",[v._v("ms")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("q")]),v._v(": 退出"),e("code",[v._v("top")]),v._v("命令。")]),v._v(" "),e("li",[e("code",[v._v("i")]),v._v(": 忽略闲置和僵尸进程。")]),v._v(" "),e("li",[e("code",[v._v("k")]),v._v(": 终止一个进程。")])]),v._v(" "),e("h2",{attrs:{id:"相关信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关信息"}},[v._v("#")]),v._v(" 相关信息")]),v._v(" "),e("h3",{attrs:{id:"概览"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[v._v("#")]),v._v(" 概览")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("total")]),v._v(": 进程总数。")]),v._v(" "),e("li",[e("code",[v._v("running")]),v._v(": 正在运行的进程数。")]),v._v(" "),e("li",[e("code",[v._v("sleeping")]),v._v(": 睡眠的进程数。")]),v._v(" "),e("li",[e("code",[v._v("stopped")]),v._v(": 停止的进程数。")]),v._v(" "),e("li",[e("code",[v._v("zombie")]),v._v(": 僵尸进程数。")])]),v._v(" "),e("h3",{attrs:{id:"cpu信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpu信息"}},[v._v("#")]),v._v(" CPU信息")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("us")]),v._v(": 用户空间占用"),e("code",[v._v("CPU")]),v._v("百分比。")]),v._v(" "),e("li",[e("code",[v._v("sy")]),v._v(": 内核空间占用"),e("code",[v._v("CPU")]),v._v("百分比。")]),v._v(" "),e("li",[e("code",[v._v("ni")]),v._v(": 用户进程空间内改变过优先级的进程占用"),e("code",[v._v("CPU")]),v._v("百分比。")]),v._v(" "),e("li",[e("code",[v._v("id")]),v._v(": 空闲"),e("code",[v._v("CPU")]),v._v("百分比。")]),v._v(" "),e("li",[e("code",[v._v("wa")]),v._v(": 等待输入输出的"),e("code",[v._v("CPU")]),v._v("时间百分比。")]),v._v(" "),e("li",[e("code",[v._v("hi")]),v._v(": 硬件"),e("code",[v._v("CPU")]),v._v("中断占用百分比。")]),v._v(" "),e("li",[e("code",[v._v("si")]),v._v(": 软中断占用百分比。")]),v._v(" "),e("li",[e("code",[v._v("st:")]),v._v("虚拟机占用百分比。")])]),v._v(" "),e("h3",{attrs:{id:"列字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列字段"}},[v._v("#")]),v._v(" 列字段")]),v._v(" "),e("p",[v._v("可以使用"),e("code",[v._v("f")]),v._v("交互命令自定义列的位置及其是否可显示。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("%CPU")]),v._v(": "),e("code",[v._v("CPU Usage")]),v._v("，"),e("code",[v._v("CPU")]),v._v("使用率，任务自上次屏幕更新以来占用的"),e("code",[v._v("CPU")]),v._v("时间份额，表示为总"),e("code",[v._v("CPU")]),v._v("时间的百分比，在真正的"),e("code",[v._v("SMP")]),v._v("环境中，如果一个进程是多线程的，并且"),e("code",[v._v("top")]),v._v("不是以线程模式运行的，那么可能会报告大于"),e("code",[v._v("100%")]),v._v("的数量，您可以使用"),e("code",[v._v("H")]),v._v("交互命令切换线程模式，同样对于多处理器环境，如果"),e("code",[v._v("Irixmode")]),v._v("处于关闭状态，"),e("code",[v._v("top")]),v._v("将在"),e("code",[v._v("Solarismode")]),v._v("下运行，其中任务的"),e("code",[v._v("cpu")]),v._v("使用量将除以"),e("code",[v._v("cpu")]),v._v("总数，您可以使用"),e("code",[v._v("I")]),v._v("交互命令切换"),e("code",[v._v("Irix/Solaris")]),v._v("模式。")]),v._v(" "),e("li",[e("code",[v._v("%MEM")]),v._v(": "),e("code",[v._v("Memory Usage (RES)")]),v._v("，内存使用情况，任务当前使用的可用物理内存共享。")]),v._v(" "),e("li",[e("code",[v._v("CGROUPS")]),v._v(": "),e("code",[v._v("Control Groups")]),v._v("，控制组，流程所属的控制组的名称，如果不适用于该流程，则为"),e("code",[v._v("-")]),v._v("，控制组用于在安装定义的进程组之间分配资源("),e("code",[v._v("cpu")]),v._v("、内存、网络带宽等)，它们支持对这些资源的分配、拒绝、优先排序、管理和监视进行细粒度控制，一个系统上可以同时存在许多不同的"),e("code",[v._v("cgroup")]),v._v("层次结构，并且每个层次结构都连接到一个或多个子系统，子系统表示单个资源，注意"),e("code",[v._v(": CGROUPS")]),v._v("字段与大多数列不同，不是固定宽度的，显示时，它加上任何其他可变宽度列将分配所有剩余屏幕宽度(最多"),e("code",[v._v("512")]),v._v("个字符)，即便如此，这种可变宽度的字段仍然会受到截断。")]),v._v(" "),e("li",[e("code",[v._v("CODE")]),v._v(": "),e("code",[v._v("Code Size (KiB)")]),v._v("，代码大小"),e("code",[v._v("KiB")]),v._v("，用于可执行代码的物理内存量，也称为文本驻留集大小或"),e("code",[v._v("TRS")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("COMMAND")]),v._v(": "),e("code",[v._v("Command Name or Command Line")]),v._v("，命令名或命令行，显示用于启动任务的命令行或关联程序的名称，您可以使用"),e("code",[v._v("c")]),v._v("在命令行和名称之间切换，这既是一个命令行选项，也是一个交互式命令，当您选择显示命令行时，没有命令行的进程(如内核线程)将只显示程序名，此字段也可能受视图显示模式的影响，注意"),e("code",[v._v("COMMAND")]),v._v("字段与大多数列不同，不是固定宽度的，显示时，它加上任何其他可变宽度列将分配所有剩余屏幕宽度(最多"),e("code",[v._v("512")]),v._v("个字符)，即便如此，这种可变宽度的字段仍然会受到截断，当显示命令行时，此字段尤其如此。")]),v._v(" "),e("li",[e("code",[v._v("DATA")]),v._v(": "),e("code",[v._v("Data + Stack Size (KiB)")]),v._v("，用于可执行代码以外的物理内存量，也称为数据驻留集大小或"),e("code",[v._v("DRS")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("ENVIRON")]),v._v(": "),e("code",[v._v("Environment variables")]),v._v("，显示各个进程看到的所有环境变量(如果有)，这些变量将以原始的本机顺序显示，而不是您习惯于用非限定的"),e("code",[v._v("set")]),v._v("看到的排序顺序，注意"),e("code",[v._v("ENVIRON")]),v._v("字段与大多数列不同，不是固定宽度的，显示时，它加上任何其他可变宽度列将分配所有剩余屏幕宽度(最多"),e("code",[v._v("512")]),v._v("个字符)，即便如此，这种可变宽度的字段仍然会受到截断。")]),v._v(" "),e("li",[e("code",[v._v("Flags")]),v._v(": "),e("code",[v._v("Task Flags")]),v._v("，此列表示任务的当前调度标志，这些标志以十六进制表示，并且不包含零，这些标志正式记录在"),e("code",[v._v("<linux/sched.h>")]),v._v("中。")]),v._v(" "),e("li",[e("code",[v._v("GID")]),v._v(": "),e("code",[v._v("Group Id")]),v._v("，有效组"),e("code",[v._v("ID")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("GROUP")]),v._v(": "),e("code",[v._v("Group Name")]),v._v("，有效组名。")]),v._v(" "),e("li",[e("code",[v._v("NI")]),v._v(": "),e("code",[v._v("Nice Value")]),v._v("，负的"),e("code",[v._v("nice")]),v._v("值意味着更高的优先级，而正的"),e("code",[v._v("nice")]),v._v("值意味着更低的优先级，此字段中的零表示在确定任务的调度能力时不会调整优先级。")]),v._v(" "),e("li",[e("code",[v._v("P")]),v._v(": "),e("code",[v._v("Last used CPU (SMP)")]),v._v("，表示最后使用的处理器的数字，在真正的"),e("code",[v._v("SMP")]),v._v("环境中，这可能会频繁更改，因为内核有意使用弱关联，另外，运行"),e("code",[v._v("top")]),v._v("的行为可能会破坏这种弱关联，并导致更多进程更频繁地更改"),e("code",[v._v("cpu")]),v._v("(因为对"),e("code",[v._v("cpu")]),v._v("时间的额外需求)。")]),v._v(" "),e("li",[e("code",[v._v("PGRP")]),v._v(": "),e("code",[v._v("Process Group Id")]),v._v("，每个进程都是唯一进程组的成员，该进程组用于分配信号，并由终端对其输入和输出请求进行仲裁，创建("),e("code",[v._v("fork")]),v._v(")流程时，它将成为其父流程组的成员，按照约定，该值等于流程组的第一个成员(称为流程组长)的流程"),e("code",[v._v("ID")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("PID")]),v._v(": "),e("code",[v._v("Process Id")]),v._v("，任务的唯一进程"),e("code",[v._v("ID")]),v._v("，它定期包装，但从不在零重新启动，在内核中，它是一个由"),e("code",[v._v("task_struct")]),v._v("定义的可调度实体，此值还可用作"),e("code",[v._v(":")]),v._v("进程组"),e("code",[v._v("ID")]),v._v("、会话负责人的会话"),e("code",[v._v("ID")]),v._v("、线程组负责人的线程组"),e("code",[v._v("ID")]),v._v("、进程组负责人的"),e("code",[v._v("TTY")]),v._v("进程组"),e("code",[v._v("ID")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("PPID")]),v._v(": "),e("code",[v._v("Parent Process Id")]),v._v("，任务父进程的进程"),e("code",[v._v("ID")]),v._v("("),e("code",[v._v("pid")]),v._v(")。")]),v._v(" "),e("li",[e("code",[v._v("PR")]),v._v(": "),e("code",[v._v("Priority")]),v._v("，任务的调度优先级，如果在该字段中看到"),e("code",[v._v("rt")]),v._v("，则表示任务正在实时调度优先级下运行，在"),e("code",[v._v("linux")]),v._v("下，实时优先级有些误导，因为传统上操作本身是不可抢占的，虽然"),e("code",[v._v("2.6")]),v._v("内核可以被大部分抢占，但并不总是这样。")]),v._v(" "),e("li",[e("code",[v._v("RES")]),v._v(": "),e("code",[v._v("Resident Memory Size (KiB)")]),v._v("，任务使用的非交换物理内存。")]),v._v(" "),e("li",[e("code",[v._v("RUID")]),v._v(": "),e("code",[v._v("Real User Id")]),v._v("，真实用户"),e("code",[v._v("ID")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("RUSER")]),v._v(": "),e("code",[v._v("Real User Name")]),v._v("，真实的用户名。")]),v._v(" "),e("li",[e("code",[v._v("S")]),v._v(": "),e("code",[v._v("Process Status")]),v._v("，任务的状态，可以是: "),e("code",[v._v("D")]),v._v("不间断睡眠、"),e("code",[v._v("R")]),v._v("运行、"),e("code",[v._v("S")]),v._v("睡眠、"),e("code",[v._v("T")]),v._v("跟踪或停止、"),e("code",[v._v("Z")]),v._v("僵尸，显示为正在运行的任务应该更恰当地被认为是准备运行的——它们的任务结构只在"),e("code",[v._v("Linux")]),v._v("运行队列中表示，即使没有真正的"),e("code",[v._v("SMP")]),v._v("机器，根据"),e("code",[v._v("top")]),v._v("的延迟间隔和"),e("code",[v._v("nice")]),v._v("值，也可能会看到许多处于这种状态的任务。")]),v._v(" "),e("li",[e("code",[v._v("SHR")]),v._v(": "),e("code",[v._v("Shared Memory Size (KiB)")]),v._v("，一个任务可用的共享内存量，通常不是所有的内存都是驻留的，它只是反映了可能与其他进程共享的内存。")]),v._v(" "),e("li",[e("code",[v._v("SID")]),v._v(": "),e("code",[v._v("Session Id")]),v._v("，会话是进程组的集合，通常由登录"),e("code",[v._v("shell")]),v._v("建立，新"),e("code",[v._v("fork")]),v._v("的进程加入其创建者的会话，按照惯例，这个值等于会话的第一个成员的进程"),e("code",[v._v("ID")]),v._v("，称为会话头，通常是登录"),e("code",[v._v("shell")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("SUID")]),v._v(": "),e("code",[v._v("Saved User Id")]),v._v("，保存的用户"),e("code",[v._v("ID")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("SUPGIDS")]),v._v(": "),e("code",[v._v("Supplementary Group IDs")]),v._v("，建立的或从任务父级继承的任何补充组的"),e("code",[v._v("ID")]),v._v("，它们以逗号分隔的列表显示，注意"),e("code",[v._v("SUPGIDS")]),v._v("字段与大多数列不同，不是固定宽度的，显示时，它加上任何其他可变宽度列将分配所有剩余屏幕宽度(最多"),e("code",[v._v("512")]),v._v("个字符)，即便如此，这种可变宽度的字段仍然会受到截断。")]),v._v(" "),e("li",[e("code",[v._v("SUPGRPS")]),v._v(": "),e("code",[v._v("Supplementary Group Names")]),v._v("，登录时建立的或从任务父级继承的任何补充组的名称，它们以逗号分隔的列表显示，注意"),e("code",[v._v(": SUPGRPS")]),v._v("字段与大多数列不同，不是固定宽度的，显示时，它加上任何其他可变宽度列将分配所有剩余屏幕宽度(最多"),e("code",[v._v("512")]),v._v("个字符)，即便如此，这种可变宽度的字段仍然会受到截断。")]),v._v(" "),e("li",[e("code",[v._v("SUSER")]),v._v(": "),e("code",[v._v("Saved User Name")]),v._v("，保存的用户名。")]),v._v(" "),e("li",[e("code",[v._v("SWAP")]),v._v(": "),e("code",[v._v("Swapped Size (KiB)")]),v._v("，任务地址空间的非驻留部分。")]),v._v(" "),e("li",[e("code",[v._v("TGID")]),v._v(": "),e("code",[v._v("Thread Group Id")]),v._v("，任务所属的线程组的"),e("code",[v._v("ID")]),v._v("，它是线程组负责人的"),e("code",[v._v("PID")]),v._v("，在内核术语中，它表示那些共享"),e("code",[v._v("mm_struct")]),v._v("的任务。")]),v._v(" "),e("li",[e("code",[v._v("TIME")]),v._v(": "),e("code",[v._v("CPU Time")]),v._v("，任务自启动以来使用的总"),e("code",[v._v("CPU")]),v._v("时间，当累积模式打开时，每个进程都会列出它及其子进程使用的"),e("code",[v._v("cpu")]),v._v("时间，使用"),e("code",[v._v("S")]),v._v("切换累积模式，这既是命令行选项，也是交互式命令，有关此模式的其他信息，请参阅"),e("code",[v._v("S")]),v._v("交互命令。")]),v._v(" "),e("li",[e("code",[v._v("TIME+")]),v._v(": "),e("code",[v._v("CPU Time, hundredths")]),v._v("，与"),e("code",[v._v("Time")]),v._v("相同，但通过百分之一秒反映出更多的粒度。")]),v._v(" "),e("li",[e("code",[v._v("TPGID")]),v._v(": "),e("code",[v._v("Tty Process Group Id")]),v._v("，连接的"),e("code",[v._v("tty")]),v._v("的前台进程的进程组"),e("code",[v._v("ID")]),v._v("，如果进程未连接到终端，则为"),e("code",[v._v("-1")]),v._v("，按照惯例，此值等于流程组长的流程"),e("code",[v._v("ID")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("TTY")]),v._v(": "),e("code",[v._v("Controlling Tty")]),v._v("，控制终端的名称，这通常是启动进程的设备(串口、"),e("code",[v._v("pty")]),v._v("等)，并用于输入或输出，但是，任务不需要与终端相关联，在这种情况下，您将看到"),e("code",[v._v("?")]),v._v("显示。")]),v._v(" "),e("li",[e("code",[v._v("UID")]),v._v(": "),e("code",[v._v("User Id")]),v._v("，任务所有者的有效用户"),e("code",[v._v("ID")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("USED")]),v._v(": "),e("code",[v._v("Memory in Use (KiB)")]),v._v("，此字段表示任务已使用的非交换物理内存("),e("code",[v._v("RES")]),v._v(")加上其地址空间("),e("code",[v._v("SWAP")]),v._v(")的非驻留部分。")]),v._v(" "),e("li",[e("code",[v._v("USER")]),v._v(": "),e("code",[v._v("User Name")]),v._v("，任务所有者的有效用户名。")]),v._v(" "),e("li",[e("code",[v._v("VIRT")]),v._v(": "),e("code",[v._v("Virtual Memory Size (KiB)")]),v._v("，任务使用的虚拟内存总量。它包括所有代码、数据和共享库，以及已调出的页面和已映射但未使用的页面。")]),v._v(" "),e("li",[e("code",[v._v("WCHAN")]),v._v(": "),e("code",[v._v("Sleeping in Function")]),v._v("，取决于内核链接映射的可用性系统地图)，此字段将显示任务当前休眠的内核函数的名称或地址，正在运行的任务将在此列中显示一个破折号"),e("code",[v._v("-")]),v._v("，通过显示此字段，"),e("code",[v._v("top")]),v._v("自己的工作集可以增加"),e("code",[v._v("700Kb")]),v._v("以上，具体取决于内核版本，如果发生这种情况，减少开销的唯一方法就是停止并重新启动"),e("code",[v._v("top")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("nDRT")]),v._v(": "),e("code",[v._v("Dirty Pages Count")]),v._v("，自上次写入辅助存储器以来已修改的页数，"),e("code",[v._v("dirty pages")]),v._v("必须先写入辅助存储器，然后才能将相应的物理内存位置用于其他虚拟页。")]),v._v(" "),e("li",[e("code",[v._v("nMaj")]),v._v(": "),e("code",[v._v("Major Page Fault Count")]),v._v("，任务发生的主要页错误数，当进程试图读取或写入其地址空间中当前不存在的虚拟页时，会发生页错误，一个主要的页面错误是当辅助存储访问涉及到使该页面可用时。")]),v._v(" "),e("li",[e("code",[v._v("nMin")]),v._v(": "),e("code",[v._v("Minor Page Fault count")]),v._v("，任务发生的次要页面错误数，当进程试图读取或写入其地址空间中当前不存在的虚拟页时，会发生页错误，在使该页可用时，较小的页错误不涉及辅助存储器访问。")]),v._v(" "),e("li",[e("code",[v._v("nTH")]),v._v(": "),e("code",[v._v("Number of Threads")]),v._v("，与进程关联的线程数。")]),v._v(" "),e("li",[e("code",[v._v("nsIPC")]),v._v(": "),e("code",[v._v("IPC namespace")]),v._v("，用于隔离进程间通信("),e("code",[v._v("IPC")]),v._v(")资源(如"),e("code",[v._v("SystemVIPC")]),v._v("对象和"),e("code",[v._v("POSIX")]),v._v("消息队列)的命名空间的"),e("code",[v._v("Inode")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("nsMNT")]),v._v(": "),e("code",[v._v("MNT namespace")]),v._v("，命名空间的"),e("code",[v._v("Inode")]),v._v("，用于隔离文件系统装入点，从而提供文件系统层次结构的不同视图。")]),v._v(" "),e("li",[e("code",[v._v("nsNET")]),v._v(": "),e("code",[v._v("NET namespace")]),v._v("，命名空间的"),e("code",[v._v("Inode")]),v._v("，用于隔离网络设备、"),e("code",[v._v("IP")]),v._v("地址、"),e("code",[v._v("IP")]),v._v("路由、端口号等资源。")]),v._v(" "),e("li",[e("code",[v._v("nsPID")]),v._v(": "),e("code",[v._v("PID namespace")]),v._v("，命名空间的"),e("code",[v._v("Inode")]),v._v("，用于隔离进程"),e("code",[v._v("ID")]),v._v("号，这意味着它们不必保持唯一，因此，每个这样的名称空间都可以有自己的"),e("code",[v._v("init")]),v._v("("),e("code",[v._v("PID#1")]),v._v(")来管理各种初始化任务并获取孤立的子进程。")]),v._v(" "),e("li",[e("code",[v._v("nsUSER")]),v._v(": "),e("code",[v._v("USER namespace")]),v._v("，用于隔离用户和组"),e("code",[v._v("ID")]),v._v("号的命名空间的"),e("code",[v._v("Inode")]),v._v("，因此，一个进程可以在用户名称空间外有一个普通的未授权用户"),e("code",[v._v("ID")]),v._v("，而在该名称空间内有一个具有完全根权限的用户"),e("code",[v._v("ID0")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("nsUTS")]),v._v(": "),e("code",[v._v("UTS namespace")]),v._v("，用于隔离主机名和"),e("code",[v._v("NIS")]),v._v("域名的命名空间的"),e("code",[v._v("Inode, UTS")]),v._v("的意思是"),e("code",[v._v("UNIX")]),v._v("分时系统。")]),v._v(" "),e("li",[e("code",[v._v("vMj")]),v._v(": "),e("code",[v._v("Major Page Fault Count Delta")]),v._v("，自上次更新以来发生的主要页错误数。")]),v._v(" "),e("li",[e("code",[v._v("vMn")]),v._v(": "),e("code",[v._v("Minor Page Fault Count Delta")]),v._v("，自上次更新以来发生的次要页面错误的数量。")])]),v._v(" "),e("h2",{attrs:{id:"示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[v._v("#")]),v._v(" 示例")]),v._v(" "),e("p",[v._v("显示进程信息。")]),v._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("top")]),v._v("\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("显示完整命令。")]),v._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("top")]),v._v(" -c\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("以批处理模式显示程序信息。")]),v._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("top")]),v._v(" -b\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("以累积模式显示程序信息。")]),v._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("top")]),v._v(" -S\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("设置信息更新次数，表示更新两次后终止更新显示。")]),v._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("top")]),v._v(" -n "),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("2")]),v._v("\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("设置信息更新时间，表示更新周期为"),e("code",[v._v("3")]),v._v("秒。")]),v._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("top")]),v._v(" -d "),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("3")]),v._v("\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("显示指定的进程信息，"),e("code",[v._v("CPU")]),v._v("、内存占用率等。")]),v._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("top")]),v._v(" -p "),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("131")]),v._v("\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("不能利用交互式指令来对进程下命令。")]),v._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[v._v("top")]),v._v(" -s\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("h2",{attrs:{id:"每日一题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[v._v("#")]),v._v(" 每日一题")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("https://github.com/WindrunnerMax/EveryDay\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("https://www.computerhope.com/unix/top.htm\nhttps://www.commandlinux.com/man-page/man1/top.1.html\nhttps://www.geeksforgeeks.org/top-command-in-linux-with-examples/\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br")])])])}),[],!1,null,null,null);_.default=c.exports}}]);